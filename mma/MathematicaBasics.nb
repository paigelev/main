(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    226799,       4602]
NotebookOptionsPosition[    213765,       4390]
NotebookOutlinePosition[    214362,       4411]
CellTagsIndexPosition[    214319,       4408]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Mathematica", " ", "Basics"}]], "Title",
 CellChangeTimes->{{3.73159581953887*^9, 3.7315958817693644`*^9}, {
  3.731595936649543*^9, 3.731595940160881*^9}, {3.731598764265978*^9, 
  3.7315987682884207`*^9}, {3.731598801659882*^9, 3.731598836024366*^9}, {
  3.731598931131119*^9, 
  3.731598981020548*^9}},ExpressionUUID->"71b32cd2-9cb9-4887-aab1-\
f1760c8b78be"],

Cell[CellGroupData[{

Cell["Basics", "Section",
 CellChangeTimes->{{3.73159581953887*^9, 3.7315958817693644`*^9}, {
  3.731595936649543*^9, 3.731595940160881*^9}, {3.731598764265978*^9, 
  3.7315987682884207`*^9}, {3.731598801659882*^9, 3.731598836024366*^9}, {
  3.731598931131119*^9, 3.731598991549944*^9}, {3.731671446594808*^9, 
  3.7316714591720276`*^9}},ExpressionUUID->"ea5ab51c-6a30-47c0-8f3b-\
04da8645f7af"],

Cell[TextData[{
 "Mathematica is a rich-text mathematics editor - much like ",
 StyleBox["Jupyter Notebooks ",
  FontColor->RGBColor[0, 0, 1]],
 "or ",
 StyleBox[".mlx",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" files",
  FontColor->RGBColor[0, 0, 1]],
 " in MATLAB. ",
 StyleBox[".nb",
  FontSlant->"Italic"],
 " files can be formatted just like Word documents, where you can mix in \
equations, executable code, and pictures. \n",
 StyleBox["The number one thing to remember in Mathematica is all built-in \
functions are Capitalized and take arguments between square brackets [ ]",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.7315992158468437`*^9, 3.7315992170048447`*^9}, {
   3.731599311886813*^9, 3.7315993777899942`*^9}, {3.73159941387245*^9, 
   3.73159953802827*^9}, 3.7316713954064875`*^9, {3.794834505350544*^9, 
   3.794834526293458*^9}, {3.7948346639657593`*^9, 
   3.7948346730715027`*^9}},ExpressionUUID->"b2920327-8ca4-4ce8-bb43-\
a9985d9b0d80"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["A notebook is made from \[OpenCurlyDoubleQuote]cells\
\[CloseCurlyDoubleQuote]",
 FontColor->RGBColor[0., 0., 0.5019607843137255]]], "Section",
 CellChangeTimes->{{3.7315992158468437`*^9, 3.7315992170048447`*^9}, {
   3.731599311886813*^9, 3.7315993777899942`*^9}, {3.73159941387245*^9, 
   3.73159953802827*^9}, 3.7316713954064875`*^9, {3.794834505350544*^9, 
   3.794834526293458*^9}, {3.7948346639657593`*^9, 3.794834714915143*^9}, {
   3.794834787718213*^9, 
   3.794834837642768*^9}},ExpressionUUID->"f25d4cf3-ad2d-435b-a0e1-\
e83d6253dc30"],

Cell[TextData[{
 StyleBox["Everything in ",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" from text to input is contained within cells. ",
  FontColor->RGBColor[0, 0, 1]]
}], "Text",
 CellChangeTimes->{{3.7315992158468437`*^9, 3.7315992170048447`*^9}, {
   3.731599311886813*^9, 3.7315993777899942`*^9}, {3.73159941387245*^9, 
   3.73159953802827*^9}, 3.7316713954064875`*^9, {3.794834505350544*^9, 
   3.794834526293458*^9}, {3.7948346639657593`*^9, 3.794834714915143*^9}, {
   3.794834787718213*^9, 3.7948348110395*^9}, 3.794834854912801*^9, 
   3.794835167237667*^9},ExpressionUUID->"29a35520-3724-4ad0-8194-\
5ae6a1bbb4ef"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Any formatting will apply to the entire cell", \
"ItemNumbered",
 FontColor->RGBColor[0, 0, 1]]], "Item",
 CellChangeTimes->{{3.7315992158468437`*^9, 3.7315992170048447`*^9}, {
   3.731599311886813*^9, 3.7315993777899942`*^9}, {3.73159941387245*^9, 
   3.73159953802827*^9}, 3.7316713954064875`*^9, {3.794834505350544*^9, 
   3.794834526293458*^9}, {3.7948346639657593`*^9, 3.794834714915143*^9}, {
   3.794834787718213*^9, 3.7948348110395*^9}, 3.794834854912801*^9, {
   3.794838592862294*^9, 
   3.794838593163723*^9}},ExpressionUUID->"a6c0f6b6-4a3c-4d12-9ff0-\
8b65ef76133e"],

Cell[TextData[{
 StyleBox["Press ", "ItemNumbered",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Shift+Enter", "ItemNumbered",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" to evaluate cell", "ItemNumbered",
  FontColor->RGBColor[0, 0, 1]]
}], "Item",
 CellChangeTimes->{{3.7315992158468437`*^9, 3.7315992170048447`*^9}, {
   3.731599311886813*^9, 3.7315993777899942`*^9}, {3.73159941387245*^9, 
   3.73159953802827*^9}, 3.7316713954064875`*^9, {3.794834505350544*^9, 
   3.794834526293458*^9}, {3.7948346639657593`*^9, 3.794834714915143*^9}, {
   3.794834787718213*^9, 3.7948348110395*^9}, 3.794834854912801*^9, 
   3.7948352000974684`*^9, {3.7948385766710587`*^9, 
   3.7948386094761124`*^9}},ExpressionUUID->"27929854-291b-4b8f-9483-\
d4a835361ae6"],

Cell[TextData[{
 StyleBox["Press ", "ItemNumbered",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Ctrl+Shift+d", "ItemNumbered",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" to divide cel", "ItemNumbered",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["l", "Item",
  FontColor->RGBColor[0, 0, 1]]
}], "Item",
 CellChangeTimes->{{3.7315992158468437`*^9, 3.7315992170048447`*^9}, {
   3.731599311886813*^9, 3.7315993777899942`*^9}, {3.73159941387245*^9, 
   3.73159953802827*^9}, 3.7316713954064875`*^9, {3.794834505350544*^9, 
   3.794834526293458*^9}, {3.7948346639657593`*^9, 3.794834714915143*^9}, {
   3.794834787718213*^9, 3.7948348110395*^9}, 3.794834854912801*^9, 
   3.7948352000974684`*^9, {3.7948385766710587`*^9, 3.7948385766730328`*^9}, {
   3.794838612126567*^9, 
   3.7948386138485384`*^9}},ExpressionUUID->"1b7616a9-5da0-4a11-9ed3-\
1892fea2717a"],

Cell[TextData[{
 StyleBox["Press ", "Item",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox["Alt+Enter", "Item",
  FontSlant->"Italic",
  FontColor->RGBColor[0, 0, 1]],
 StyleBox[" to start new cell of the same type", "Item",
  FontColor->RGBColor[0, 0, 1]]
}], "Item",
 CellChangeTimes->{{3.794843435185381*^9, 3.79484343519036*^9}, 
   3.811519662670601*^9},ExpressionUUID->"7587d834-55b1-432f-bb39-\
fa66a9d2d474"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"X", "=", "0"}]], "Input",
 CellChangeTimes->{{3.7948434466485157`*^9, 3.7948434754577503`*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"4f8047a6-8e14-41f2-86b0-a306af163e29"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8115211652688494`*^9, 3.8115211707204266`*^9}},
 CellLabel->
  "Out[125]=",ExpressionUUID->"807a9fed-5510-49dc-bb6d-ad0138f64407"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Lists",
 FontColor->RGBColor[0, 0, 1]]], "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.73159581953887*^9, 3.7315958817693644`*^9}, {
   3.731595936649543*^9, 3.731595940160881*^9}, {3.731598764265978*^9, 
   3.7315987682884207`*^9}, {3.731598801659882*^9, 3.731598836024366*^9}, {
   3.731598931131119*^9, 3.731599029472855*^9}, 
   3.7316714705778303`*^9},ExpressionUUID->"10c97c96-b96e-4449-9165-\
886ec474b142"],

Cell[TextData[{
 "Mathematica is build on ",
 StyleBox["lists",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". They are the most general structure in Mathematica. You can build them in \
several ways:"
}], "Text",
 CellChangeTimes->{{3.73159581953887*^9, 3.7315958817693644`*^9}, {
  3.731595936649543*^9, 3.731595940160881*^9}, {3.731598764265978*^9, 
  3.7315987682884207`*^9}, {3.731598801659882*^9, 3.731598836024366*^9}, {
  3.731598931131119*^9, 3.7315991433658333`*^9}, {3.7315995632700596`*^9, 
  3.73159957377568*^9}},ExpressionUUID->"f7a0e2d0-1878-4ede-add2-\
9fd960ca23a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"flist", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
   "}"}]}], "\n", 
 RowBox[{"slist", " ", "=", " ", 
  RowBox[{"List", "[", 
   RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
   "]"}]}], "\n", 
 RowBox[{"rlist", " ", "=", " ", 
  RowBox[{"Range", "[", 
   RowBox[{"3", ",", "8"}], "]"}]}], "\n", 
 RowBox[{"rlist2", " ", "=", " ", 
  RowBox[{
   RowBox[{"Range", "[", 
    RowBox[{"3", ",", "8", ",", 
     RowBox[{"1", "/", "4"}]}], "]"}], "//", "N"}]}], "\n", 
 RowBox[{"mixlist", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"2", ",", "\"\<catch\>\"", ",", "4", ",", "5", ",", "True"}], 
   "}"}]}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.73159581953887*^9, 3.7315958817693644`*^9}, {
  3.731595936649543*^9, 3.731595940160881*^9}, {3.731598764265978*^9, 
  3.7315987682884207`*^9}, {3.731598801659882*^9, 3.731598836024366*^9}, {
  3.731598931131119*^9, 3.731599188349727*^9}, {3.731599267520212*^9, 
  3.7315992839028234`*^9}, {3.731600296986512*^9, 3.7316003194097424`*^9}, {
  3.7316798649286*^9, 3.731679865973838*^9}, {3.7948409019479017`*^9, 
  3.7948409732110715`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"422f7187-cf79-4d59-a55e-44bc92836611"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7948435946041584`*^9, 3.811521162127499*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"c99c7a97-ea05-4c33-bcc6-899045218222"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7948435946041584`*^9, 3.8115211621374683`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"956ac2c8-6bf2-4546-8c55-d173762809fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"3", ",", "4", ",", "5", ",", "6", ",", "7", ",", "8"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7948435946041584`*^9, 3.8115211621453867`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"97a5d688-8537-4468-b4ed-052eb6dc1d14"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "3.`", ",", "3.25`", ",", "3.5`", ",", "3.75`", ",", "4.`", ",", "4.25`", 
   ",", "4.5`", ",", "4.75`", ",", "5.`", ",", "5.25`", ",", "5.5`", ",", 
   "5.75`", ",", "6.`", ",", "6.25`", ",", "6.5`", ",", "6.75`", ",", "7.`", 
   ",", "7.25`", ",", "7.5`", ",", "7.75`", ",", "8.`"}], "}"}]], "Output",
 CellChangeTimes->{3.7948435946041584`*^9, 3.8115211621573524`*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"b79d42ca-9bcd-4274-86b0-db4b9df0a355"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "\<\"catch\"\>", ",", "4", ",", "5", ",", "True"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.7948435946041584`*^9, 3.8115211621662893`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"8837eec1-9d6a-4dbe-aed6-d58671befc58"]
}, Open  ]],

Cell["\<\
You can use indexing to extract elements just as in MATLAB or Python:\
\>", "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.731599581494548*^9, 3.731599590710637*^9}, {
  3.7315996443976536`*^9, 
  3.73159968874452*^9}},ExpressionUUID->"762124b7-1d88-4a3f-b7f3-\
541b69d05957"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"flist", "[", 
  RowBox[{"[", "4", "]"}], "]"}], "\n", 
 RowBox[{"flist", "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "5"}], "]"}], "]"}], "\n", 
 RowBox[{"3", "*", 
  RowBox[{"flist", "[", 
   RowBox[{"[", 
    RowBox[{"3", ";;"}], "]"}], "]"}]}], "\n", 
 RowBox[{"3", "*", 
  RowBox[{"mixlist", "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.731599699042627*^9, 3.7315997233623886`*^9}, 
   3.7316799867252913`*^9, {3.794840894092286*^9, 3.7948408971529956`*^9}, {
   3.7948409356784897`*^9, 3.794840945352192*^9}, {3.7948409822424774`*^9, 
   3.7948410383925467`*^9}, {3.7948437590529666`*^9, 3.7948437596819234`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"9771ba08-8327-4e69-8289-07f2856ce5ae"],

Cell[BoxData["6"], "Output",
 CellChangeTimes->{3.794843644934867*^9, 3.794843762443734*^9, 
  3.811521162282673*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"08774b26-be54-4279-a0d5-f4391e06b62e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "5", ",", "6", ",", "7"}], "}"}]], "Output",
 CellChangeTimes->{3.794843644934867*^9, 3.794843762443734*^9, 
  3.8115211622906847`*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"83c1b43c-a9bf-4625-a788-88cea1b160b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"15", ",", "18", ",", "21", ",", "24"}], "}"}]], "Output",
 CellChangeTimes->{3.794843644934867*^9, 3.794843762443734*^9, 
  3.8115211622986803`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"464e723f-1696-4e64-8869-d6ff514306b6"],

Cell[BoxData[
 RowBox[{"3", " ", "\<\"catch\"\>"}]], "Output",
 CellChangeTimes->{3.794843644934867*^9, 3.794843762443734*^9, 
  3.811521162306659*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"a553ecff-4f02-4cdd-adab-b563dd0070fa"]
}, Open  ]],

Cell["\<\
You can apply functions directly to list - the functions will return lists :\
\>", "Text",
 CellChangeTimes->{{3.7315997484474335`*^9, 3.731599749932062*^9}, {
  3.731599788580526*^9, 
  3.731599819346695*^9}},ExpressionUUID->"9806f6c7-9eb3-401b-8866-\
986898a1de5e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sqrt", "[", "flist", "]"}], "\n", 
 RowBox[{
  RowBox[{"Sqrt", "[", "flist", "]"}], "//", "N"}], "\n", 
 RowBox[{
  RowBox[{"Log", "[", "flist", "]"}], "//", "N"}]}], "Code",
 CellChangeTimes->{{3.7315998312617035`*^9, 3.7315998827345495`*^9}, 
   3.7315999165629573`*^9, {3.7316800508571463`*^9, 3.73168005303433*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"c5eeece9-99dc-46c5-8606-13abe698d7c4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SqrtBox["3"], ",", "2", ",", 
   SqrtBox["5"], ",", 
   SqrtBox["6"], ",", 
   SqrtBox["7"], ",", 
   RowBox[{"2", " ", 
    SqrtBox["2"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.794843795894383*^9, 3.811521162388301*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"d922c6b2-98c7-46d0-b901-30de890b8b80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.7320508075688772`", ",", "2.`", ",", "2.23606797749979`", ",", 
   "2.449489742783178`", ",", "2.6457513110645907`", ",", 
   "2.8284271247461903`"}], "}"}]], "Output",
 CellChangeTimes->{3.794843795894383*^9, 3.811521162396778*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"16081239-5a5c-41e7-aeae-1d21b5247b51"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0986122886681098`", ",", "1.3862943611198906`", ",", 
   "1.6094379124341003`", ",", "1.791759469228055`", ",", 
   "1.9459101490553132`", ",", "2.0794415416798357`"}], "}"}]], "Output",
 CellChangeTimes->{3.794843795894383*^9, 3.811521162405789*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"a316f497-8643-4ad4-9205-4bebf3a7b8c0"]
}, Open  ]],

Cell["\<\
There is a plethora of useful functions you can use to manipulate lists:\
\>", "Text",
 CellChangeTimes->{
  3.7315998947687335`*^9, {3.73159996796467*^9, 3.7315999687302575`*^9}, {
   3.731600014467023*^9, 
   3.7316000404851*^9}},ExpressionUUID->"d80b25c9-ecbb-4a03-86da-\
2e61adb2c513"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", "=", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "50"}], "}"}], ",", "10"}], "]"}]}]], "Code",
 CellChangeTimes->{{3.731600045882799*^9, 3.7316000679090033`*^9}, {
  3.7316001365116897`*^9, 3.7316001845436525`*^9}, {3.7316016443332057`*^9, 
  3.731601649766223*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"47170f6d-ac18-44cb-956d-c84adcf31802"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "48", ",", "47", ",", "14", ",", "9", ",", "17", ",", "36", ",", "13", ",", 
   "15", ",", "13", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.794843943950862*^9, 3.811521162486708*^9},
 CellLabel->"Out[74]=",ExpressionUUID->"4b10486f-bfcd-4c2a-afaa-d887aa4f8c32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Sort", "[", "v", "]"}], "\n", 
 RowBox[{"Union", "[", "v", "]"}], "\n", 
 RowBox[{"Reverse", "[", "v", "]"}], "\n", 
 RowBox[{"Prepend", "[", 
  RowBox[{"v", ",", "4.5"}], "]"}], "\n", 
 RowBox[{"Append", "[", 
  RowBox[{"v", ",", "4.5"}], "]"}], "\n", 
 RowBox[{"Delete", "[", 
  RowBox[{"v", ",", "6"}], "]"}]}], "Code",
 CellChangeTimes->{{3.7316000786676464`*^9, 3.731600079634326*^9}, {
   3.731600188995581*^9, 3.7316002449032683`*^9}, {3.7316016604690914`*^9, 
   3.7316016653916674`*^9}, {3.7316016959033184`*^9, 3.731601697557049*^9}, 
   3.731677807318042*^9, 3.731678127171092*^9},
 CellLabel->"In[75]:=",ExpressionUUID->"31c70515-ccc1-4c25-a567-5610bda144a3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "13", ",", "13", ",", "14", ",", "15", ",", "15", ",", "17", ",", 
   "36", ",", "47", ",", "48"}], "}"}]], "Output",
 CellChangeTimes->{3.794843970055541*^9, 3.811521162575045*^9},
 CellLabel->"Out[75]=",ExpressionUUID->"17c8cd11-0ed5-45c3-a8d9-aa10260c43a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9", ",", "13", ",", "14", ",", "15", ",", "17", ",", "36", ",", "47", ",", 
   "48"}], "}"}]], "Output",
 CellChangeTimes->{3.794843970055541*^9, 3.8115211625865383`*^9},
 CellLabel->"Out[76]=",ExpressionUUID->"961fd1d8-0fd6-4daa-a3b1-7f94433b237d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "15", ",", "13", ",", "15", ",", "13", ",", "36", ",", "17", ",", "9", ",", 
   "14", ",", "47", ",", "48"}], "}"}]], "Output",
 CellChangeTimes->{3.794843970055541*^9, 3.811521162593548*^9},
 CellLabel->"Out[77]=",ExpressionUUID->"cebfab6e-7bd5-4a04-965a-d8bccec14e31"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "4.5`", ",", "48", ",", "47", ",", "14", ",", "9", ",", "17", ",", "36", 
   ",", "13", ",", "15", ",", "13", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.794843970055541*^9, 3.8115211626005363`*^9},
 CellLabel->"Out[78]=",ExpressionUUID->"dc7b8c10-513c-4a6e-95a4-7aca77e503a5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "48", ",", "47", ",", "14", ",", "9", ",", "17", ",", "36", ",", "13", ",", 
   "15", ",", "13", ",", "15", ",", "4.5`"}], "}"}]], "Output",
 CellChangeTimes->{3.794843970055541*^9, 3.811521162607521*^9},
 CellLabel->"Out[79]=",ExpressionUUID->"3a419a0a-2f7a-420a-b99d-7e07b29876fd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "48", ",", "47", ",", "14", ",", "9", ",", "17", ",", "13", ",", "15", ",", 
   "13", ",", "15"}], "}"}]], "Output",
 CellChangeTimes->{3.794843970055541*^9, 3.8115211626145306`*^9},
 CellLabel->"Out[80]=",ExpressionUUID->"5c052327-e93a-4b62-a441-a1405512a29a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Import Data",
 FontColor->RGBColor[0, 0, 1]]], "Section",
 CellChangeTimes->{{3.73160032997993*^9, 3.7316003306987634`*^9}, {
  3.7316017361764383`*^9, 
  3.7316017435809746`*^9}},ExpressionUUID->"483476a4-e351-4e5e-a6e8-\
e60b48d4ec87"],

Cell[TextData[{
 "Mathematica can import numerous file formats, including ones produced by \
other programs. (",
 StyleBox["When importing files, be extra careful with your directory",
  FontSlant->"Italic"],
 " ",
 StyleBox["path",
  FontSlant->"Italic"],
 ")."
}], "Text",
 CellChangeTimes->{{3.7316017855665684`*^9, 3.731601786816598*^9}, {
  3.7316019218060827`*^9, 3.7316019356491175`*^9}, {3.7316019908599234`*^9, 
  3.7316020152108574`*^9}, {3.7948408228546877`*^9, 
  3.7948408669740896`*^9}},ExpressionUUID->"ef99f424-5caa-4b70-8fd4-\
562dbbe67175"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"sun", " ", "=", " ", 
   RowBox[{"Import", "[", "\"\<sunspotsbyyear.csv\>\"", "]"}]}], 
  ";"}]], "Code",
 CellChangeTimes->{{3.7316020214692554`*^9, 3.731602026572525*^9}, {
   3.7316022292217245`*^9, 3.7316022487071843`*^9}, {3.731602280202021*^9, 
   3.7316023025893507`*^9}, {3.731602348577368*^9, 3.731602352201144*^9}, {
   3.7316027192726974`*^9, 3.731602739962*^9}, {3.731602851659274*^9, 
   3.7316028526282606`*^9}, 3.731603242817586*^9, {3.7316038258492084`*^9, 
   3.7316038262869*^9}, 3.731680259499298*^9, {3.7948356864983325`*^9, 
   3.7948357022848263`*^9}, {3.7948357348042355`*^9, 3.794835752334582*^9}, {
   3.7948358997999725`*^9, 3.7948359459297113`*^9}, {3.7948363419880557`*^9, 
   3.794836350504303*^9}, {3.7948364229366393`*^9, 3.7948364305432854`*^9}, {
   3.7948366805384693`*^9, 3.7948367335296726`*^9}, 3.7948443182466316`*^9, {
   3.8115212332705393`*^9, 3.8115212379700813`*^9}, {3.8115213229462323`*^9, 
   3.811521376638623*^9}},
 CellLabel->
  "In[135]:=",ExpressionUUID->"89d2cde4-4ed3-4f38-9712-d61b7d770fb4"],

Cell[BoxData[
 TemplateBox[{
  "Import", "nffil", 
   "\"File sunspotsbyyear.csv not found during \
\\!\\(\\*RowBox[{\\\"Import\\\"}]\\).\"", 2, 135, 41, 21088965629977958453, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8115211628006735`*^9, 3.8115212069636707`*^9, 
  3.8115212386340303`*^9, 3.811521324756755*^9, 3.811521387648429*^9, 
  3.811521420968642*^9},
 CellLabel->
  "During evaluation of \
In[135]:=",ExpressionUUID->"d568d2ee-31b9-49a2-8b5c-8276fbdd4084"]
}, Open  ]],

Cell[TextData[{
 "It will most likely be imported as a nested list - ",
 StyleBox["a list of lists",
  FontSlant->"Italic"],
 ". Use the same syntax to extract elements"
}], "Text",
 CellChangeTimes->{{3.7316027853193703`*^9, 
  3.73160284158894*^9}},ExpressionUUID->"7beda78e-900b-4e9e-9960-\
46202509a992"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"sun", "=", 
  RowBox[{"Flatten", "[", "sun", "]"}]}], "\n", 
 RowBox[{"sun", " ", "=", " ", 
  RowBox[{"Partition", "[", 
   RowBox[{"sun", ",", "5"}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"sun", "[", 
   RowBox[{"[", "9", "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sun", "[", 
   RowBox[{"[", 
    RowBox[{"9", ",", "2"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sun", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{
    RowBox[{"sun", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], ",", 
    RowBox[{"Joined", "->", "True"}]}], "]"}], ";"}]}], "Code",
 CellChangeTimes->{{3.731602856507682*^9, 3.7316028643446903`*^9}, {
   3.7316028947962217`*^9, 3.7316029046489983`*^9}, {3.7316029575203953`*^9, 
   3.7316030784499083`*^9}, {3.7316031179839077`*^9, 3.731603225693903*^9}, {
   3.731608786848883*^9, 3.7316088608471107`*^9}, {3.731671543405731*^9, 
   3.73167156378401*^9}, {3.731678226505838*^9, 3.731678247250451*^9}, {
   3.731678300577187*^9, 3.731678365296435*^9}, {3.7316784332189083`*^9, 
   3.7316784804442005`*^9}, {3.731678522233781*^9, 3.731678525812271*^9}, 
   3.73168032976999*^9, {3.731680375317519*^9, 3.7316803853778954`*^9}, 
   3.731680423554201*^9, {3.794836009234789*^9, 3.794836012518999*^9}, {
   3.7948360621172795`*^9, 3.7948360624184713`*^9}, {3.7948361421519976`*^9, 
   3.7948362085992274`*^9}, {3.7948362484213457`*^9, 
   3.7948362981014924`*^9}, {3.794836873805359*^9, 3.794836936069708*^9}, {
   3.79483700957136*^9, 3.7948370181503954`*^9}, {3.7948370487206116`*^9, 
   3.7948370784465933`*^9}, {3.794837147448*^9, 3.7948371527009478`*^9}, {
   3.794844358368086*^9, 3.794844377005784*^9}, {3.794845189535617*^9, 
   3.794845203824839*^9}, {3.7948452842379727`*^9, 3.794845284831999*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"916e6833-121c-4e42-b3ea-58564b5bcf73"],

Cell[BoxData[
 TemplateBox[{
  "Flatten", "normal", 
   "\"Nonatomic expression expected at position \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) in \\!\\(\\*RowBox[{\\\"Flatten\\\", \
\\\"[\\\", \\\"$Failed\\\", \\\"]\\\"}]\\).\"", 2, 83, 9, 
   21088965629977958453, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811521162932416*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"4c66be02-171c-4754-b9f9-a3e69c17c734"],

Cell[BoxData[
 RowBox[{"Flatten", "[", "$Failed", "]"}]], "Output",
 CellChangeTimes->{{3.7948443401111593`*^9, 3.794844378171172*^9}, 
   3.794845206442859*^9, 3.7948452865326757`*^9, 3.8115211629695168`*^9},
 CellLabel->"Out[83]=",ExpressionUUID->"1efa8750-c99b-4c1c-baf7-4d32d59fb058"],

Cell[BoxData[
 TemplateBox[{
  "Flatten", "argb", 
   "\"\\!\\(\\*RowBox[{\\\"Flatten\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments \
are expected.\"", 2, 84, 10, 21088965629977958453, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811521162975501*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"79f0c151-3b73-45f4-918c-de09defc930f"],

Cell[BoxData[
 RowBox[{"Flatten", "[", "]"}]], "Output",
 CellChangeTimes->{{3.7948443401111593`*^9, 3.794844378171172*^9}, 
   3.794845206442859*^9, 3.7948452865326757`*^9, 3.81152116299728*^9},
 CellLabel->"Out[84]=",ExpressionUUID->"63732e95-07f4-4c13-a6fd-06caaa3a00d6"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"9\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Flatten\\\", \\\"[\\\", \\\"]\\\"}]\\) does not \
exist.\"", 2, 85, 11, 21088965629977958453, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811521163003297*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"546627db-efa7-4e2d-8480-77b82fc379cc"],

Cell[BoxData[
 TemplateBox[{
  "Part", "partw", 
   "\"Part \\!\\(\\*RowBox[{\\\"9\\\"}]\\) of \
\\!\\(\\*RowBox[{\\\"Flatten\\\", \\\"[\\\", \\\"]\\\"}]\\) does not \
exist.\"", 2, 86, 12, 21088965629977958453, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811521163027641*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"748b74fb-6d21-4e73-a0e0-306ecbb52402"],

Cell[BoxData[
 TemplateBox[{
  "Flatten", "argb", 
   "\"\\!\\(\\*RowBox[{\\\"Flatten\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments \
are expected.\"", 2, 87, 13, 21088965629977958453, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8115211630586433`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"c81f6bf2-357e-4489-b542-bf9606396a30"],

Cell[BoxData[
 TemplateBox[{
  "Flatten", "argb", 
   "\"\\!\\(\\*RowBox[{\\\"Flatten\\\"}]\\) called with \
\\!\\(\\*RowBox[{\\\"0\\\"}]\\) arguments; between \
\\!\\(\\*RowBox[{\\\"1\\\"}]\\) and \\!\\(\\*RowBox[{\\\"3\\\"}]\\) arguments \
are expected.\"", 2, 88, 14, 21088965629977958453, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.811521163089821*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"53037d0e-791e-4e2d-bdde-ccf74e48a9b3"],

Cell[BoxData[
 TemplateBox[{
  "ListPlot", "lpn", 
   "\"\\!\\(\\*RowBox[{\\\"Flatten\\\", \\\"[\\\", \\\"]\\\"}]\\) is not a \
list of numbers or pairs of numbers.\"", 2, 88, 15, 21088965629977958453, 
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8115211631850767`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"4d8fd314-71cb-4b0e-a7ed-e86e8ed66b39"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Defining Functions", "Section",
 InitializationCell->True,
 CellChangeTimes->{{3.73160889381126*^9, 
  3.7316089024733047`*^9}},ExpressionUUID->"d2454e12-3980-48f2-9c18-\
d7fd668f403e"],

Cell["There are 3 common ways to define functions in Mathematica", "Text",
 CellChangeTimes->{{3.7316089145473604`*^9, 3.7316089151722727`*^9}, {
  3.7316089473610325`*^9, 
  3.731608969544049*^9}},ExpressionUUID->"95ac84ce-0152-418b-abf5-\
204356a53b19"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"f", " ", "=", " ", 
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", 
     RowBox[{
      SuperscriptBox["x", "2"], "+", 
      SuperscriptBox["y", "2"]}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["#1", "2"], "+", 
      SuperscriptBox["#2", "2"]}], ")"}], " ", "&"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}]}], ";"}], "\n", 
 RowBox[{"f", "[", 
  RowBox[{"2", ",", "3"}], "]"}], "\n", 
 RowBox[{"g", "[", 
  RowBox[{"2", ",", "3"}], "]"}], "\n", 
 RowBox[{"h", "[", 
  RowBox[{"2", ",", "3"}], "]"}]}], "Code",
 CellChangeTimes->{{3.7316089772823467`*^9, 3.7316091106644087`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"d2bc7c46-eae1-4d2d-a1df-3a0dbbb17b03"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.794844530132614*^9, 3.811521163311117*^9},
 CellLabel->"Out[92]=",ExpressionUUID->"182f05a3-0ba0-43da-b131-ce0380fc7c0b"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.794844530132614*^9, 3.811521163319109*^9},
 CellLabel->"Out[93]=",ExpressionUUID->"a41112d5-0d95-4988-ae79-8242b3a46929"],

Cell[BoxData["13"], "Output",
 CellChangeTimes->{3.794844530132614*^9, 3.8115211633259363`*^9},
 CellLabel->"Out[94]=",ExpressionUUID->"d07692a7-e94b-45ac-a912-9614fde8920e"]
}, Open  ]],

Cell["I do prefer the explicitly definition ", "Text",
 CellChangeTimes->{{3.731609122535737*^9, 3.73160914444188*^9}, {
  3.731610211826152*^9, 
  3.731610212779379*^9}},ExpressionUUID->"19517f4f-e3ee-4829-baa7-\
66fe1b06e1ac"],

Cell[TextData[{
 "h[x_,y_] := ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "2"], "+", 
    SuperscriptBox["y", "2"]}], TraditionalForm]],ExpressionUUID->
  "ed38dba3-5ef9-4e4b-8df1-f2ea7158332d"]
}], "CodeText",
 CellChangeTimes->{{3.7316091717400255`*^9, 3.7316091914417915`*^9}},
 TextAlignment->Center,ExpressionUUID->"6b8ea98e-3eca-47ea-bef1-5952294c66a3"],

Cell[TextData[{
 "The := is a delayed assignment operator, meaning that every time you call ",
 StyleBox["h, ",
  FontSlant->"Italic"],
 "Mathematica will return and redefine the function. This is a very nice \
option since parameters inside your function definition could change from \
when it is created to when it is called. For example, try the code below by \
assigning ",
 StyleBox["fun",
  FontSlant->"Italic"],
 " with = and then with :="
}], "Text",
 CellChangeTimes->{{3.731609197005948*^9, 3.7316093238985157`*^9}, {
  3.7316095105289373`*^9, 
  3.731609549739423*^9}},ExpressionUUID->"13a00737-a2c7-413d-aecc-\
0ad368b85c1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"a", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"F", "[", "x_", "]"}], ":=", " ", 
   FractionBox[
    RowBox[{"a", "*", 
     SuperscriptBox["x", "3"]}], 
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], "-", "1"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "[", "x_", "]"}], " ", "=", " ", 
   FractionBox[
    RowBox[{"a", "*", 
     SuperscriptBox["x", "3"]}], 
    RowBox[{
     RowBox[{"Exp", "[", "x", "]"}], "-", "1"}]]}], ";"}]}], "Code",
 InitializationCell->True,
 CellChangeTimes->{{3.7316093305536523`*^9, 3.7316094219800425`*^9}, 
   3.731609499399662*^9, 3.7316102400816016`*^9, 3.7316808668706613`*^9, 
   3.7948376590933914`*^9},
 CellLabel->"In[95]:=",ExpressionUUID->"9274211f-a52d-470e-9606-6ffb2acba465"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"F", "[", "2", "]"}], "-", 
  RowBox[{"G", "[", "2", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"G", "[", "2", "]"}]}], "Code",
 CellChangeTimes->{{3.7316094322012978`*^9, 3.7316094435812664`*^9}, {
   3.731680778521863*^9, 3.731680779850646*^9}, 3.7948376687336297`*^9, 
   3.7948446986616073`*^9},
 CellLabel->"In[98]:=",ExpressionUUID->"e87e61cc-2e11-4d55-842b-4d28c42ca8c5"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.794844616345784*^9, 3.794844700049631*^9, 
  3.811521163418829*^9},
 CellLabel->"Out[98]=",ExpressionUUID->"2b35b345-b871-4a14-ad6e-489c3cdd20ec"],

Cell[BoxData[
 FractionBox["16", 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "2"]}]]], "Output",
 CellChangeTimes->{3.794844616345784*^9, 3.794844700049631*^9, 
  3.811521163426797*^9},
 CellLabel->
  "Out[100]=",ExpressionUUID->"1f22cd88-f036-406b-ae56-a120ab9afeaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"xRange", "[", 
    RowBox[{"v_", ",", "\[Theta]_", ",", "h_", ",", "g_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["v", "2"], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "g"], "+", 
    SqrtBox[
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["v", "4"], " ", 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], 
       SuperscriptBox["g", "2"]], "+", 
      FractionBox[
       RowBox[{"2", " ", "h", " ", 
        SuperscriptBox["v", 
         RowBox[{"2", " "}]], 
        SuperscriptBox[
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "2"]}], "g"]}]]}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"xRange", "[", 
   RowBox[{"45", ",", 
    RowBox[{"60", "*", 
     RowBox[{"\[Pi]", "/", "180"}]}], ",", "0", ",", "9.81"}], "]"}], "//", 
  "N"}], "\n", 
 RowBox[{
  RowBox[{"Sqrt", "[", "4", "]"}], "+", " ", 
  SuperscriptBox["6", "2"]}], "\n", 
 RowBox[{
  RowBox[{"Cos", "[", "\[Pi]", "]"}], "//", "N"}]}], "Code",
 CellChangeTimes->{{3.794837898599494*^9, 3.7948379513623047`*^9}, {
  3.794844854664979*^9, 3.7948449329781227`*^9}, {3.7948449826843443`*^9, 
  3.794845034904039*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"1a379e00-2181-42b9-8158-8d3208dd1b70"],

Cell[BoxData["178.76671179036578`"], "Output",
 CellChangeTimes->{
  3.794844823452676*^9, {3.794844896909134*^9, 3.794844935023506*^9}, {
   3.79484498782415*^9, 3.7948450368138733`*^9}, 3.8115211635122137`*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"b2b9f2dd-7ef8-45dc-8ded-0660989196a7"],

Cell[BoxData["38"], "Output",
 CellChangeTimes->{
  3.794844823452676*^9, {3.794844896909134*^9, 3.794844935023506*^9}, {
   3.79484498782415*^9, 3.7948450368138733`*^9}, 3.8115211635209413`*^9},
 CellLabel->
  "Out[103]=",ExpressionUUID->"4725d9a5-8fcd-425f-8973-2f004cbbf03f"],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 CellChangeTimes->{
  3.794844823452676*^9, {3.794844896909134*^9, 3.794844935023506*^9}, {
   3.79484498782415*^9, 3.7948450368138733`*^9}, 3.8115211635269976`*^9},
 CellLabel->
  "Out[104]=",ExpressionUUID->"c409f73b-28e9-4563-ac7d-8f7ea564636f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Advanced Mathematical Operations", "Section",
 CellChangeTimes->{{3.7316102920549355`*^9, 
  3.731610311200531*^9}},ExpressionUUID->"77ee462c-bd54-4368-b864-\
b08e60d1869a"],

Cell[TextData[{
 "Mathematica\[CloseCurlyQuote]s great advantage over other programming \
languages is it\[CloseCurlyQuote]s",
 StyleBox[" symbolic engine. ",
  FontWeight->"Bold"],
 "Mathematica can perform symbolic calculations on almost any analytic \
expression. Not only that but it can then numerically evaluate those same \
expressions. Let\[CloseCurlyQuote]s look at some examples:"
}], "Text",
 CellChangeTimes->{{3.7316103388585997`*^9, 3.7316104246639395`*^9}, {
   3.731610567642376*^9, 3.731610575642222*^9}, 3.7316106418619814`*^9, {
   3.7316197406227903`*^9, 3.7316197428279305`*^9}, {3.731619780999075*^9, 
   3.7316197819460793`*^9}, {3.794841853991129*^9, 
   3.7948418743686495`*^9}},ExpressionUUID->"ed73612d-f64e-40b4-a120-\
d22ba8ffe7a8"],

Cell[CellGroupData[{

Cell["Simple Equation Solving", "Subsubsection",
 CellChangeTimes->{{3.731672521969199*^9, 
  3.7316725352912836`*^9}},ExpressionUUID->"9ee1bf1d-efa2-49f6-a4b0-\
912a8e3d3da0"],

Cell[BoxData[
 RowBox[{"xsol", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "3"], "-", "x", "-", "9"}], "\[Equal]", "0"}], ",",
      "x"}], "]"}], "//", "N"}]}]], "Code",
 CellChangeTimes->{{3.731672665053713*^9, 3.7316727179059286`*^9}, {
  3.7316810033475037`*^9, 3.731681004408516*^9}, {3.7948451363178096`*^9, 
  3.794845150546133*^9}},
 CellLabel->
  "In[105]:=",ExpressionUUID->"26dc218e-942b-4629-afcb-7dc4cbb176c2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xsol", "=", 
  RowBox[{"Flatten", "[", "xsol", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"6", "*", 
     SuperscriptBox["x", "2"]}], "-", 
    RowBox[{"8", "*", "x"}]}], "/.", 
   RowBox[{"xsol", "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], "//", "N"}]}], "Code",
 CellChangeTimes->{{3.7316727268908195`*^9, 3.731672782858747*^9}},
 CellLabel->
  "In[106]:=",ExpressionUUID->"04aad786-9f2b-4f88-b832-1ac9eef323e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "2.240040987469438`"}], ",", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "1.120020493734719`"}], "-", 
     RowBox[{"1.662329004486564`", " ", "\[ImaginaryI]"}]}]}], ",", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{
     RowBox[{"-", "1.120020493734719`"}], "+", 
     RowBox[{"1.662329004486564`", " ", "\[ImaginaryI]"}]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.79484531726437*^9, 3.811521163694992*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"e3dfc9c1-d005-4764-bf5b-3f837f884879"],

Cell[BoxData["12.186373853502825`"], "Output",
 CellChangeTimes->{3.79484531726437*^9, 3.8115211637029734`*^9},
 CellLabel->
  "Out[107]=",ExpressionUUID->"e43ed683-566c-402c-a6f7-979ab21209d4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["System of Equations", "Subsubsection",
 CellChangeTimes->{{3.7316197646584415`*^9, 3.731619770922614*^9}, 
   3.7316725074225883`*^9},ExpressionUUID->"193ef597-0a23-4ea0-a2f4-\
357d60a82765"],

Cell[TextData[{
 "The classic physics example of a situation requiring a system of equations \
is simple DC circuits (although, more complex circuits require them too). Let\
\[CloseCurlyQuote]s look at a circuit like this one:\n",
 Cell[BoxData[
  GraphicsBox[
   TagBox[RasterBox[CompressedData["
1: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
OUvSIamXIdjinH/7299mzpyZ8ZMjrmhH47CFtHm2Sfz6bARDZTJ/db8OfwgH
zWClRf7z78EVC1DWfvQfjkPp1avX0qVLUcllOfpP1aBTvoM7p8UDm10tyDwr
WM4nlO56xJ+XfrIK5Nj0tmcN6bZl8iWx8s5/ZsJNwpmRQISfe+45MHypKv4p
EBnvjuULFZmYpuiCCG9xA79pIuLB4Vno4DPZdrgcc9SDXt7psx/4GTHLIrMj
ajHZ5pprrpkxYwY6URk8Py7Ujga7K/6z6wtxoEpbphUPhQKhUOTgzoeVl0V4
r75G+pwBMPqE2TvVtYNYcvKN/v37r1ixQiqz/1ZbD/mZu4rNrKiYK8DQ1VA0
Etp33w4rP1uNXYGlgUhUty2ZvMFTDvJRnyWvvvrqueeei9FmGXOWEs1nGAYN
tzQeBXL5sLDlc6d2bKkojdoojdoXFTUqVJSixs0bF7Vo27Tx3XfcvjmUj/4z
Rmvrdawlmth11103a9as+vsW/9fVLv7s12crpobQf4YWa7++g7YUV+hxketB
1Ild7WLARpwr4s/Lli3DCFvKUBScVz/j807vCi6zVB7c8IyNv65r17bNli3b
LNELiMkbjoipysSh7IvP7CbgD//222/PO++8iooK5lv5XfpmOLxUZFpZ3O54
UqOxafUrrRWlcas/KIUHNm7aqLBAgVeK0rSJojQpanztP8cXaywbOokblprj
hHUATfXiiy9+8skncU8Gz+8PaOOeWudvSIlGlYZWM7/F27YbV00mFqMj5/l3
gss3y7t/DW6ALD7wn2X/IILT1vk/W48zJqXBhUZ3nDe3rRG3/QP0o+VercDh
UwqKRo+bpNt8wdmwGndcphv5OzIOtLe4uPioo47CoShydmi5BDzcdjEBDwpW
M8MiiY7r87rl/9m7kfLszPciDtOMmIjl8/XmwiWlfzrsSKWw/aLvtpI+ZxZ5
u7zxxhv/+9//NvTl+PHr8/aRXwnydgKFhgONt1+/fkuWLME2V/ZNoeNuH5wi
BlNUM+WLINfrD5SXXDUJpyjE/eXl5QMGDPj+++/lPbf6xpStahUJfTbNdcuf
Av959htLgibvWvX4TFQszod2uqu/+E4pav/0G4tInzMLNlRBpf/2t789++yz
WWZx7g4PosHYA/TZYzhgcMf5BPJNn/39Av5wk6qq3bt3X7ZsGb6MxWI1Rrp4
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
gz5r7h42H/WIESOmTJlimqYssvyUgqyC9NlPLBYDof7iiy8aNWrEpyLR41yf
Pb62O2zD77Jg4VKlsPmTz86SIY5kfMPCw0if80Wf+S9bziU6oc/bps+aqCgt
zz7nGpvPdWmFdT7IcA+ypdtuu+2xxx6rp8XBibpB+oz4/eelS5cqivLSSy8J
4TXMaCVzTebxuYVXffWtUtD0jfcXGjvXZ4P0OS/02UzVZ4dteuPdJxo33ees
s69VbdVE/3mP0ud//OMfTz/9tJy/jpLrsoE802ffmNztE4C7cg/mMK9Yuaxp
s8Jnn3uea46t82XOmBYKl5dXhJq02KewZYclq74VIxOS84Enuo3qPb7Btutz
6vyitieCLTz5zxh3zQXtQZ//eEw8kf6HDp/reduXovD+v70zgY6qWPN4mwRC
CIvAIIwwKIvjk+egyAnIFhEhBJUMIGNkEzKAwzsu4EMOIBwZI7K4vCPowyMK
QRRQBvIEfCKyCQGGRUWHZSDog7yBbJ2tO73cvrfvrfmqvu7ikoRAWNK3u7/f
wXh7u/fWrap/ffXVV1XyXDcWvB1d+sxELl/yPzv4v0Cr+dvyD2faYm5PHfWS
wtOsuX3h5N+A7Hv++ec//vhjDN6Al+ZAaCKEQGnCKgbVJzMzM6LzRRMxq3zO
F4qVxnQ/Uwy+1yTzOj1CypQdO7NjG9hssQ0bxjeJj+XBGzGxtpZ3NLLZ4m22
lm8vXV/k5DsFe6AOGrpyaWlxrR70OUgN6/OXVzh5uhRl7vQX4EZ793nEXuJg
io/p0L6UQxo1nXn8vFkpU7yamEkhxraE8zzQ2tT55q+qz/gOfCrDA8IZVQwI
ei4tFu9XhZVZztiPaz+eZUvo8NBT87TgFKb62i/gJgB5lJGRsXLlSmaynCPa
VAsnMCPmz58PEh3R/RpVxKzyOQV+A/upoM8eQyi2u8Klu/mnB/ZvscXYbLeB
Rsc3im+QEM8DN2yxtkZNWq/fuK+4gouz2FlHDbg4AvVRD/l+wVVrFg82UJWy
C47yXJ/fkdD0dy+98oFb3Dwf3JT6zN0ynuu7+dr12RwM8NZbby1ZsuTG0hdy
FO7QMCr9mNUi+8XCroVMP/jFihm2xHu6Pv2Ghi1eWDk3SJ+ticwCXCAFF7CK
3HypUZ/BflZ0XDCSzxN0fbttbavW8Ws3ZHNXgAaV0PXEsIdBsTPf/JPTy79d
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
ic4N+G16ejoTEi2lOwIedaj0GR8dtJi5ubl79+6Fx3vw4MFDhw7tvsXAVX78
8cecnJzvvvtuyJAhZlmOj483T/aR8+WBDh06zJkz5+zZs/XwZK4P0mcrE3n6
bN6eCfrCzzzzzLx58zIyMtCrUFBQwISQgkTXvl4N9qNXrVo1btw4sNBOnDjB
rhYfZf4UPZDHjx+H1mHBggUzZ85kQTvcsvMU6kRo7WdmWi0KrlsP+67Kjhgc
TJo0yazPErCWExMTW7ZsCcbz7NmzZQCeHCK0IKTPViby9JkJt7MmlneD/u+a
NWvgnbVr1w4aNAg/RZ+DDPCohWXLlkFNZMJmgx40GGy1jOuhOONfLOEgzkOH
DgVhLywsfP/991999dWbkzxrECp9rpJrspGt6zydumK+9NSpU+Pi4tCPESuA
l02aNLn//vuht3X06FF5e+Ypn9b0QpM+W5nI02eUUEhXamrqtm3bWFCQoVsK
aTQvky6XUKiRrKwssLpZMNwCzPKePXtKi6hG8LRowBcVFcH3L1y4gB+BuQ5m
/MKFC60ZAXsdhDB+A66Igdnwtz4LrQwHGj9+PPqf0WxOSkp65513pBMDvmCO
+rO43JE+WxYZn7Br167BgweHqXRIs0TGRYCcTp48efPmzVhNZLqys7PHjh2L
ngc5jIhdY9BPdBe73W44/vLLL+WCfvLncP5+/fr99ttvctQPryjHIllQnH/+
+ee+ffuC2Wy20kG9Fy1a9Nprr8k7N7tiwu7hR+H8FCwhkKHp6ekgztCleu+9
9yCXzfkYduIGuXbXXXdBKjCMMOzKYTSwadOmtLQ0EC7zSrYWB4wZDHyFv+aV
deEdaGsgRbKkQamTZvOWLVtGjBiBuoohdub153FUccOGDWPGjME34czYimEr
AD/p3bv3oUOHmBBkucYCnoqJ0n7y5Em4BFjaMghWDlbC2cCEnjJlCjNVZLmi
hWwuw4Jo02coJ5hSSOaBAwdyc3Mh17wC8xOQhS2MaNGiBZgckZ19YQdG+KOy
nT59GneBZ5fPI7YyTFQZ4/KZWQUFBWA542oS6G1ADWfC7MHEfv3116NGjUI3
CAZIg5DiR/Dmzp07U1JSatxoHl9evHhx+PDhIL/yoniqkpISuNaJEyegdTh+
/Dh+JCUaf4gHS5YsASsakyAHtsIuKDra9BmpkmvVP73BpVFCgs1mk61PON5/
BIOZAn32tm3bVjFELY5uWqtHKvaLL774wQcfMFMonXnADqsVFEVcTxV1Vcos
9F7BLkpOTkZhR+sIv6AFF7dBa7m4uLhbt24//fSTvBk8FSgw9HnRQ4ImsfRY
MmHG45twoUWLFr355puo3hhSgtEI9RCHcLOIQn2GAiArCBicVeItwzf5oM/y
GMth2HUBIg/ZYgLHjh17+OGHw8i5wWqqDmlpaVlZWXiM0/dkhLNUWrn5xbZt
20Ci0S+Bb2ZnZz/xxBNVzqmL8ADzIh4IVE+wonfs2CE/AssZDO/CwkKswnAJ
3eTKk88WrwjfmTdvXmZmJiq/9G/o4eP9izZ91oPOjeojkmgehG/yzfocvqmI
SFBbQMeaNWtmBFcWCgukqQlaBy9Hjx796aefssvX6TXHYlWf+rdhw4aJEyei
nG7fvh3OAFUPHgWYtXByPI+UZfw5+pzhJ/A1aALS09N/+OEHJjogTz31FE5j
wW1b8U7MO7rKJc5YcNWmxYsXz507VxcVXw8fZUaiTZ+lSYkFRoZey+g7iVHT
dgaWBRIi9bl6WohQgRkBggM6k5+ff88990BFC7t1e7CyPPvssytXrmRBL67d
bjf3Q5lpYziMi8aPQGM3b96ckZEBQg2mbxUBl1UMx7XxGH4rd8qAS8DlevXq
Bdrev39/nMAikZNQ5E/wZnThlpG1YObMmbNmzWLBwcFrX7sp5EShPpu9f+aR
BTM1KraVgYLXpk0buZVAmFoLkYcMMFu4cKGcAJWYmGgLK3ABhGXLlknvrgTk
F6sJSjQ2PVJpcWQQWLduXe/evVHYQUjRJSIdzuaCKoUdnSfSF925c2cZ+4qj
rnK1OmnAm3168jxYx2fMmHHmzJkqCwVbn2jTZxYsFeYxAtlXQsJLmSU9evTA
g+jJyrAA1APl6Pz58+3btw/17UQXaIxV2V2UhY9/CZpF2frIfUNw2ggRRrDL
tw/Qg1Ec9VgViBowD3OcOnXqwQcfvFKXjbhF4D6te/bsOXr06O7du3NycjZt
2rQ3TGjevPl3AjjeunXr/v374XjXrl2hvi+ibkDxg7zLy8vTxRCnNSehRydy
hxHo3S9btizsnM9hDVSHQ4cOjR8/HnqXSUlJvXv3TktLS01NTQ4TEhMTn3zy
yQEDBgwaNGjgwIHwF5IAf0N9X0Td6NOnz7hx47Kzs3XTwlOk0lbAPEUlvILr
Igan02nuyIRR/Hl1qFKHI4bYk10OuOCE3FDfFHFpBkeVqRxE/WAO0GLBaebX
t7RaSGDBcJQqo6ihvi+ibpjLpMxH8j+HHFy/Ao/l7h4hvaPoonoVMOplncyb
BbvChnqhvi+ibuCsWGxnpYczMpayDGtk7jBTdlC+1DO6mGhjBE3oUN9OHTBM
phdUcL8grP0zhMxTMtUsAmYE1C8UB8qXeqO6/RxejSPeLQ5b6DSdIZyRHirz
AiMEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAEQRAE
QViH/wdYkifc
     "], {{0, 384}, {480, 0}}, {0, 255},
     ColorFunction->RGBColor],
    BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
    Selectable->False],
   DefaultBaseStyle->"ImageGraphics",
   ImageSize->{254.66666666666617`, Automatic},
   ImageSizeRaw->{480, 384},
   PlotRange->{{0, 480}, {0, 384}}]],ExpressionUUID->
  "7c65e55b-2bc0-4255-9025-f11081086a41"],
 " "
}], "Text",
 CellChangeTimes->{{3.731620290527382*^9, 3.7316204258339453`*^9}, {
   3.731620458592554*^9, 3.73162046490446*^9}, 3.7316205252684364`*^9, {
   3.731672527014642*^9, 
   3.7316725279848037`*^9}},ExpressionUUID->"3bfc7253-6931-49f7-869c-\
f420f42b2f1a"],

Cell["\<\
Recalling Kirchhoff\[CloseCurlyQuote]s Laws, the system of equations that \
relate all the currents, voltages, and resistors for this circuit is\
\>", "Text",
 CellChangeTimes->{{3.7316205896277866`*^9, 
  3.7316206578185496`*^9}},ExpressionUUID->"3d636b8f-a02b-4414-9f82-\
770760faaa64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["V", "1"], " ", "-", 
   RowBox[{
    SubscriptBox["i", "1"], 
    SubscriptBox["R", "1"]}], "-", 
   RowBox[{
    SubscriptBox["i", "2"], 
    SubscriptBox["R", "2"]}], "+", 
   SubscriptBox["V", "2"], "-", 
   RowBox[{
    SubscriptBox["i", "1"], 
    SubscriptBox["R", "1"]}]}], " ", "=", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   SubscriptBox["V", "2"], " ", "+", 
   RowBox[{
    SubscriptBox["i", "3"], 
    SubscriptBox["R", "1"]}], "+", 
   RowBox[{
    SubscriptBox["i", "3"], 
    SubscriptBox["R", "2"]}], "+", 
   SubscriptBox["V", "3"], "-", 
   RowBox[{
    SubscriptBox["i", "2"], 
    SubscriptBox["R", "2"]}]}], " ", "=", " ", "0"}], "\[IndentingNewLine]", 
 RowBox[{
  SubscriptBox["i", "1"], "=", 
  RowBox[{
   SubscriptBox["i", "2"], "+", 
   SubscriptBox["i", "3"]}]}]}], "DisplayFormula",
 CellChangeTimes->{{3.731620673384591*^9, 3.731620809151911*^9}, 
   3.731620871760127*^9},ExpressionUUID->"1e331a4f-e951-43a5-afe9-\
97a126de7398"],

Cell["Coding this into Mathematica,", "Text",
 CellChangeTimes->{{3.731620816843237*^9, 
  3.731620826768711*^9}},ExpressionUUID->"24d97914-b0d9-419c-b4f1-\
16cc515423e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currents", "=", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SubscriptBox["V", "1"], " ", "-", 
         RowBox[{
          SubscriptBox["i", "1"], 
          SubscriptBox["R", "1"]}], "-", 
         RowBox[{
          SubscriptBox["i", "2"], 
          SubscriptBox["R", "2"]}], "+", 
         SubscriptBox["V", "2"], "-", 
         RowBox[{
          SubscriptBox["i", "1"], 
          SubscriptBox["R", "1"]}]}], " ", "==", " ", "0"}], ",", 
       RowBox[{
        RowBox[{
         SubscriptBox["V", "2"], " ", "+", 
         RowBox[{
          SubscriptBox["i", "3"], 
          SubscriptBox["R", "1"]}], "+", 
         RowBox[{
          SubscriptBox["i", "3"], 
          SubscriptBox["R", "2"]}], "+", 
         SubscriptBox["V", "3"], "-", 
         RowBox[{
          SubscriptBox["i", "2"], 
          SubscriptBox["R", "2"]}]}], " ", "==", " ", "0"}], ",", 
       RowBox[{
        SubscriptBox["i", "1"], "==", 
        RowBox[{
         SubscriptBox["i", "2"], "+", 
         SubscriptBox["i", "3"]}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       SubscriptBox["i", "1"], ",", 
       SubscriptBox["i", "2"], ",", 
       SubscriptBox["i", "3"]}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Code",
 CellChangeTimes->{{3.7316208346422195`*^9, 3.7316209086291084`*^9}, {
  3.7316718842037463`*^9, 3.7316718863671126`*^9}, {3.7316719636712475`*^9, 
  3.7316719653590603`*^9}},
 CellLabel->
  "In[108]:=",ExpressionUUID->"c7cd0896-916a-4109-acf7-d4480b74e868"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     SubscriptBox["i", "1"], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["R", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "1"], "+", 
          SubscriptBox["V", "2"]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           SubscriptBox["V", "1"]}], "+", 
          SubscriptBox["V", "2"], "-", 
          SubscriptBox["V", "3"]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubsuperscriptBox["R", "1", "2"]}], "+", 
       RowBox[{"5", " ", 
        SubscriptBox["R", "1"], " ", 
        SubscriptBox["R", "2"]}], "+", 
       SubsuperscriptBox["R", "2", "2"]}]]}], ",", 
    RowBox[{
     SubscriptBox["i", "2"], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "1"], "+", 
          SubscriptBox["V", "2"]}], ")"}]}], "+", 
       RowBox[{
        SubscriptBox["R", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "1"], "+", 
          RowBox[{"3", " ", 
           SubscriptBox["V", "2"]}], "+", 
          RowBox[{"2", " ", 
           SubscriptBox["V", "3"]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubsuperscriptBox["R", "1", "2"]}], "+", 
       RowBox[{"5", " ", 
        SubscriptBox["R", "1"], " ", 
        SubscriptBox["R", "2"]}], "+", 
       SubsuperscriptBox["R", "2", "2"]}]]}], ",", 
    RowBox[{
     SubscriptBox["i", "3"], "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{
        SubscriptBox["R", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "1"], "-", 
          SubscriptBox["V", "3"]}], ")"}]}], "-", 
       RowBox[{"2", " ", 
        SubscriptBox["R", "1"], " ", 
        RowBox[{"(", 
         RowBox[{
          SubscriptBox["V", "2"], "+", 
          SubscriptBox["V", "3"]}], ")"}]}]}], 
      RowBox[{
       RowBox[{"2", " ", 
        SubsuperscriptBox["R", "1", "2"]}], "+", 
       RowBox[{"5", " ", 
        SubscriptBox["R", "1"], " ", 
        SubscriptBox["R", "2"]}], "+", 
       SubsuperscriptBox["R", "2", "2"]}]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7948454652632675`*^9, 3.8115211638596163`*^9},
 CellLabel->
  "Out[108]=",ExpressionUUID->"c4289d27-0932-47ff-ae2a-ece317f0c3cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currents2", "=", 
  RowBox[{"Flatten", "[", "currents", "]"}]}]], "Code",
 CellChangeTimes->{{3.7316719010927887`*^9, 3.731671917531313*^9}, {
  3.7316719488107243`*^9, 3.7316719827018967`*^9}},
 CellLabel->
  "In[109]:=",ExpressionUUID->"471995c4-7a71-4ce9-b27a-5d686a6c7b18"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["i", "1"], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SubscriptBox["R", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["V", "1"], "+", 
         SubscriptBox["V", "2"]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SubscriptBox["V", "1"]}], "+", 
         SubscriptBox["V", "2"], "-", 
         SubscriptBox["V", "3"]}], ")"}]}]}], 
     RowBox[{
      RowBox[{"2", " ", 
       SubsuperscriptBox["R", "1", "2"]}], "+", 
      RowBox[{"5", " ", 
       SubscriptBox["R", "1"], " ", 
       SubscriptBox["R", "2"]}], "+", 
      SubsuperscriptBox["R", "2", "2"]}]]}], ",", 
   RowBox[{
    SubscriptBox["i", "2"], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SubscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["V", "1"], "+", 
         SubscriptBox["V", "2"]}], ")"}]}], "+", 
      RowBox[{
       SubscriptBox["R", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["V", "1"], "+", 
         RowBox[{"3", " ", 
          SubscriptBox["V", "2"]}], "+", 
         RowBox[{"2", " ", 
          SubscriptBox["V", "3"]}]}], ")"}]}]}], 
     RowBox[{
      RowBox[{"2", " ", 
       SubsuperscriptBox["R", "1", "2"]}], "+", 
      RowBox[{"5", " ", 
       SubscriptBox["R", "1"], " ", 
       SubscriptBox["R", "2"]}], "+", 
      SubsuperscriptBox["R", "2", "2"]}]]}], ",", 
   RowBox[{
    SubscriptBox["i", "3"], "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{
       SubscriptBox["R", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["V", "1"], "-", 
         SubscriptBox["V", "3"]}], ")"}]}], "-", 
      RowBox[{"2", " ", 
       SubscriptBox["R", "1"], " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["V", "2"], "+", 
         SubscriptBox["V", "3"]}], ")"}]}]}], 
     RowBox[{
      RowBox[{"2", " ", 
       SubsuperscriptBox["R", "1", "2"]}], "+", 
      RowBox[{"5", " ", 
       SubscriptBox["R", "1"], " ", 
       SubscriptBox["R", "2"]}], "+", 
      SubsuperscriptBox["R", "2", "2"]}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.794845493655532*^9, 3.8115211639534473`*^9},
 CellLabel->
  "Out[109]=",ExpressionUUID->"8599ee25-74cf-460f-b494-638eb8708e51"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currents2", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "2"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.731671974311677*^9, 3.7316721300334826`*^9}, {
  3.7316721602370377`*^9, 3.7316721636876855`*^9}, {3.731672404359817*^9, 
  3.731672405295768*^9}, {3.794845520297333*^9, 3.7948455488562803`*^9}},
 CellLabel->
  "In[110]:=",ExpressionUUID->"8a600782-1a13-4e20-b190-7c5af4b5c75c"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SubscriptBox["R", "1"], " ", 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["V", "1"], "+", 
      SubscriptBox["V", "2"]}], ")"}]}], "+", 
   RowBox[{
    SubscriptBox["R", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       SubscriptBox["V", "1"]}], "+", 
      SubscriptBox["V", "2"], "-", 
      SubscriptBox["V", "3"]}], ")"}]}]}], 
  RowBox[{
   RowBox[{"2", " ", 
    SubsuperscriptBox["R", "1", "2"]}], "+", 
   RowBox[{"5", " ", 
    SubscriptBox["R", "1"], " ", 
    SubscriptBox["R", "2"]}], "+", 
   SubsuperscriptBox["R", "2", "2"]}]]], "Output",
 CellChangeTimes->{{3.7948455123801146`*^9, 3.7948455501910677`*^9}, 
   3.8115211640376763`*^9},
 CellLabel->
  "Out[110]=",ExpressionUUID->"5c97c532-c282-47d4-b58a-8214a2cccb08"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["i", "1"], "-", 
   SubscriptBox["i", "2"], "-", 
   SubscriptBox["i", "3"]}], "/.", "currents2"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{
    SubscriptBox["i", "1"], "-", 
    SubscriptBox["i", "2"], "-", 
    SubscriptBox["i", "3"]}], "/.", "currents2"}], "//", 
  "FullSimplify"}]}], "Code",
 CellChangeTimes->{{3.7316721366559525`*^9, 3.73167218101521*^9}, {
  3.73167224281136*^9, 3.731672249827483*^9}, {3.7316724116709394`*^9, 
  3.731672444677374*^9}, {3.731672476547162*^9, 3.731672492062991*^9}, {
  3.731681316904639*^9, 3.7316813395098047`*^9}, {3.7948377537770247`*^9, 
  3.7948377587647133`*^9}},
 CellLabel->
  "In[111]:=",ExpressionUUID->"3828b5ab-4dba-4191-8936-5afd2e351902"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["V", "1"], "+", 
       SubscriptBox["V", "2"]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["R", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", " ", 
        SubscriptBox["V", "1"]}], "+", 
       SubscriptBox["V", "2"], "-", 
       SubscriptBox["V", "3"]}], ")"}]}]}], 
   RowBox[{
    RowBox[{"2", " ", 
     SubsuperscriptBox["R", "1", "2"]}], "+", 
    RowBox[{"5", " ", 
     SubscriptBox["R", "1"], " ", 
     SubscriptBox["R", "2"]}], "+", 
    SubsuperscriptBox["R", "2", "2"]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["V", "1"], "-", 
       SubscriptBox["V", "3"]}], ")"}]}], "-", 
    RowBox[{"2", " ", 
     SubscriptBox["R", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["V", "2"], "+", 
       SubscriptBox["V", "3"]}], ")"}]}]}], 
   RowBox[{
    RowBox[{"2", " ", 
     SubsuperscriptBox["R", "1", "2"]}], "+", 
    RowBox[{"5", " ", 
     SubscriptBox["R", "1"], " ", 
     SubscriptBox["R", "2"]}], "+", 
    SubsuperscriptBox["R", "2", "2"]}]], "-", 
  FractionBox[
   RowBox[{
    RowBox[{
     SubscriptBox["R", "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["V", "1"], "+", 
       SubscriptBox["V", "2"]}], ")"}]}], "+", 
    RowBox[{
     SubscriptBox["R", "1"], " ", 
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["V", "1"], "+", 
       RowBox[{"3", " ", 
        SubscriptBox["V", "2"]}], "+", 
       RowBox[{"2", " ", 
        SubscriptBox["V", "3"]}]}], ")"}]}]}], 
   RowBox[{
    RowBox[{"2", " ", 
     SubsuperscriptBox["R", "1", "2"]}], "+", 
    RowBox[{"5", " ", 
     SubscriptBox["R", "1"], " ", 
     SubscriptBox["R", "2"]}], "+", 
    SubsuperscriptBox["R", "2", "2"]}]]}]], "Output",
 CellChangeTimes->{3.794845580767028*^9, 3.8115211641239595`*^9},
 CellLabel->
  "Out[111]=",ExpressionUUID->"50684687-f29c-4daf-897a-a061a3e35760"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.794845580767028*^9, 3.811521164133895*^9},
 CellLabel->
  "Out[112]=",ExpressionUUID->"df0512c1-a3d6-4469-94b4-bb91b3df7d6c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hydrogen Atom Wavefunction", "Subsubsection",
 CellChangeTimes->{{3.7316197841388474`*^9, 3.7316197924903917`*^9}, {
  3.731620945854559*^9, 
  3.731620946864645*^9}},ExpressionUUID->"051a8616-2991-4dc5-b1e5-\
793908dbc2e3"],

Cell[TextData[{
 "The wavefunctions for the hydrogen atom are combinations of Laguerre \
Polynomials and Spherical Harmonic functions, both of which are built-in \
functions of Mathematica. Here is the wave function for the ",
 StyleBox["n=3, l=0, ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "l"], TraditionalForm]],ExpressionUUID->
  "b4905b89-2948-4ab1-88e9-81d39d8c8bc6"],
 StyleBox["=0",
  FontSlant->"Italic"],
 " wavefunction:"
}], "Text",
 CellChangeTimes->{{3.731620951594837*^9, 
  3.7316210588085847`*^9}},ExpressionUUID->"5962accc-7ea4-411d-ad57-\
45ed7098ce1f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]", "[", 
   RowBox[{"r_", ",", "\[Phi]_", ",", "\[Theta]_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"81", 
     SqrtBox[
      RowBox[{"3", "*", "\[Pi]", "*", 
       SuperscriptBox["a", "3"]}]]}]], 
   RowBox[{"(", 
    RowBox[{"27", "-", 
     RowBox[{"18", "*", 
      FractionBox["r", "a"]}], "+", 
     RowBox[{"2", "*", 
      FractionBox[
       SuperscriptBox["r", "2"], 
       SuperscriptBox["a", "2"]]}]}], ")"}], 
   RowBox[{"Exp", "[", 
    RowBox[{"-", 
     FractionBox["r", 
      RowBox[{"3", "*", "a"}]]}], "]"}]}]}], "\n", 
 RowBox[{"\[CapitalPsi]", " ", "\[Alpha]", " ", "\[Theta]", " ", 
  "\[CapitalAlpha]", " ", "\[Psi]", " ", "\[CapitalOmega]", " ", 
  "\[Omega]"}], "\n", 
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"\[Psi]", "[", 
     RowBox[{"r", ",", "\[Phi]", ",", "\[Theta]"}], "]"}], ",", "r"}], "]"}], 
  "//", "FullSimplify"}], "\n", 
 RowBox[{"\[Psi]", "[", 
  RowBox[{"2", ",", 
   RowBox[{"\[Pi]", "/", "2"}], ",", "\[Pi]"}], "]"}]}], "Code",
 CellChangeTimes->{{3.731610432229093*^9, 3.7316104421091204`*^9}, {
  3.731610650093646*^9, 3.7316108120202413`*^9}, {3.731610854040063*^9, 
  3.7316109411432114`*^9}, {3.7948380901469283`*^9, 3.7948381063146667`*^9}, {
  3.7948457006715136`*^9, 3.7948457939808145`*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"03beff4a-286e-4a66-87ba-4832a08312f7"],

Cell[BoxData[
 RowBox[{"\[Alpha]", " ", "\[CapitalAlpha]", " ", "\[Theta]", " ", "\[Psi]", 
  " ", "\[CapitalPsi]", " ", "\[Omega]", " ", "\[CapitalOmega]"}]], "Output",
 CellChangeTimes->{3.7948456830213966`*^9, 3.811521164237862*^9},
 CellLabel->
  "Out[114]=",ExpressionUUID->"818c8963-80e7-4ef4-abbb-b860589ab051"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "r"}], "/", "12"}]], " ", 
    RowBox[{"(", 
     RowBox[{"648", "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "60"}], "+", "r"}], ")"}], " ", "r"}]}], ")"}]}], 
   RowBox[{"62208", " ", 
    SqrtBox[
     RowBox[{"3", " ", "\[Pi]"}]]}]]}]], "Output",
 CellChangeTimes->{3.7948456830213966`*^9, 3.811521164293584*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"deddb6e0-7924-47eb-8c44-ca67fb3b32ee"],

Cell[BoxData[
 FractionBox["37", 
  RowBox[{"1296", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"1", "/", "6"}]], " ", 
   SqrtBox[
    RowBox[{"3", " ", "\[Pi]"}]]}]]], "Output",
 CellChangeTimes->{3.7948456830213966`*^9, 3.811521164302556*^9},
 CellLabel->
  "Out[116]=",ExpressionUUID->"88d9b7c1-b02f-4679-8f7b-e92515199aa2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"Integrate", "[", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[Psi]", "[", 
           RowBox[{"r", ",", "\[Phi]", ",", "\[Theta]"}], "]"}], "2"], "*", 
         SuperscriptBox["r", "2"], "*", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", "0", ",", "a"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Phi]", ",", "0", ",", 
        RowBox[{"2", "*", "\[Pi]"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}], "//", 
  "N"}]], "Code",
 CellChangeTimes->{{3.7316108164111958`*^9, 3.7316108655548115`*^9}, {
  3.731610950638813*^9, 3.7316113243133135`*^9}, {3.7316114041043587`*^9, 
  3.7316114195186977`*^9}, {3.7316814859380865`*^9, 3.731681486555769*^9}},
 CellLabel->
  "In[117]:=",ExpressionUUID->"e90ac3ec-1162-422f-929c-6912cd953dce"],

Cell[BoxData["0.009866360749979153`"], "Output",
 CellChangeTimes->{3.7948458931488237`*^9, 3.811521164806418*^9},
 CellLabel->
  "Out[117]=",ExpressionUUID->"3907c432-cb1f-4f9d-a4f8-f9c36876c483"]
}, Open  ]],

Cell[TextData[{
 "You\[CloseCurlyQuote]ll look at the Spherical Harmonic functions in ",
 StyleBox["Mathematica_Lesson.nb.",
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.7948417248537264`*^9, 
  3.7948417607486877`*^9}},ExpressionUUID->"d30dff4d-5545-4541-b605-\
6bfad6b3cd51"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Pendulum, small-angle approximation", "Subsubsection",
 CellChangeTimes->{{3.7316198658331146`*^9, 
  3.73161988987877*^9}},ExpressionUUID->"c4e29796-8c0e-4b68-b8fb-\
11dded6e3185"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"g", ",", "L"}], "]"}], "\n", 
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"DSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "==", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["g", "L"]}], "*", 
        RowBox[{"\[Theta]", "[", "t", "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "0", "]"}], "\[Equal]", "0.03"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
     "}"}], ",", 
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", "t"}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.7316198991393795`*^9, 3.731620050982238*^9}, {
  3.7316816246592855`*^9, 3.731681633034259*^9}},
 CellLabel->
  "In[118]:=",ExpressionUUID->"06092796-0f18-483f-9106-1d71312c9f65"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
    RowBox[{"0.03`", " ", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{
        SqrtBox["g"], " ", "t"}], 
       SqrtBox["L"]], "]"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.794846051328624*^9, 3.8115211648984947`*^9},
 CellLabel->
  "Out[119]=",ExpressionUUID->"2c847f76-d184-40a1-8aa3-3e57efdfe582"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "1", ",", "2"}], "]"}], "]"}]], "Code",
 CellChangeTimes->{{3.7316200703483887`*^9, 3.731620085698135*^9}, {
  3.794846090880175*^9, 3.794846091548637*^9}},
 CellLabel->
  "In[120]:=",ExpressionUUID->"dee73eea-c5df-44c5-89d6-92023d610fcb"],

Cell[BoxData[
 RowBox[{"0.03`", " ", 
  RowBox[{"Cos", "[", 
   FractionBox[
    RowBox[{
     SqrtBox["g"], " ", "t"}], 
    SqrtBox["L"]], "]"}]}]], "Output",
 CellChangeTimes->{{3.7948460781669393`*^9, 3.7948460944887505`*^9}, 
   3.8115211649868917`*^9},
 CellLabel->
  "Out[120]=",ExpressionUUID->"3ce8665b-8b02-43a7-9aa0-2fbde200db8b"]
}, Open  ]],

Cell[TextData[StyleBox["Non-linear Pendulum Problem", "Subsubsection"]], \
"Text",
 CellChangeTimes->{{3.731611350942113*^9, 3.7316113715425715`*^9}, {
  3.7316198084559193`*^9, 
  3.7316198207189436`*^9}},ExpressionUUID->"f3c18655-20bb-4318-b25f-\
ffb47d7e3306"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", " ", "=", " ", "9.8"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"L", " ", "=", " ", "1"}], ";"}], "\n", 
 RowBox[{"sol", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "''"}], "[", "t", "]"}], " ", "==", " ", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["g", "L"]}], "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]", "[", "t", "]"}], "]"}]}]}], ",", 
      RowBox[{
       RowBox[{"\[Theta]", "[", "0", "]"}], "==", 
       RowBox[{"\[Pi]", "/", "2"}]}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Theta]", "'"}], "[", "0", "]"}], "==", "0"}]}], "}"}], ",", 
    RowBox[{"\[Theta]", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]}]}], "Code",
 CellChangeTimes->{{3.7316113792956057`*^9, 3.7316113882041435`*^9}, {
   3.7316114458636274`*^9, 3.731611544789826*^9}, {3.7316116643821893`*^9, 
   3.731611689083536*^9}, 3.7316117258358526`*^9, {3.7316189019736557`*^9, 
   3.7316189345630817`*^9}},
 CellLabel->
  "In[121]:=",ExpressionUUID->"0cd8687e-4080-436d-8e61-80d63ab9d010"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], "\[Rule]", 
    RowBox[{
     InterpretationBox[
      RowBox[{
       TagBox["InterpolatingFunction",
        "SummaryHead"], "[", 
       DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
        "Ready"}, 
        TemplateBox[{
          PaneSelectorBox[{False -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquarePlusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/lj4AIURU+yH5Pzd0wYnD
3dQ/m5C8mY3f8D/SUFjDa77lP9iFbLSfadi/IqE47Akn8D87AVJF1Lv2v9Wb
k3tZVPU/uAItTyZn97+7wbiC/fH6P6DBkgZT59m/gEqXStgXAEDejwSoE37u
P7tJtw/c7gJAQhD5Nd0h+T/ziT6XnbgFQEsLyfIdsu8/2iBupGZSCEDGq3FS
8yLWv1rNgu1ZJAtA7WAPNiUb97+J0D+8VMYNQDnBh/QT6va/WwqypoYtEECY
lFaB1z/cvz63Ng34kxFA9fkqUPH07z94j482beISQBnlPuExHPk/f/LaffdM
FEB5gOOt8VDwPwX2WabgsBVAfsSjZdvP2b/iJK2RzfwWQMb8kXuLtva/jN7y
ms9kGEBPic08/7X2v43DDGfVtBlAjFHs6Zaz2L9bMxlR8CAbQFqKdTzz7PA/
p0NZHGqGHEDMNHYkTxb5P0t/barn0x1APNo2vm9O7z+8RXRWej0fQBPKtC+n
ut6/wpunYohHIEAoxlAqtVL3v+XkrgoD7SBAe1d0ptvV9r9vc69BiKAhQLGG
Kp8wydO/pRcaWg9IIkBa6kdx/GXwP0EBfgGh/SJA1NpWwJoa+T8cu3sZ4q8j
QC7u9KEjae0/oorjEiVWJEDjOUyaRtLbv4+fRJtyCiVAbK4nhO+W978oyg8F
wrIlQHD5B1o1Wva/AMV038BXJkBud4HQkt7Wvz4F00jKCidAzdzf/DX38D8o
W5uT1bEnQDktZqLkIfk/ePZcbetmKEAJuiZZQavuP3SniCgDEClAQExVYLkw
2r+vKE5UyrUpQPWtdXfKvfa/Ue8MD5xpKkCUK5CyQbH2v5/LNatvEStArFP2
lt6d2L9T7VfWTccrQHUMH2ZR7PA/R98Tctt5LEA1m+bYsxb5P+bmOe9qIC1A
rm5PhVFj7z/rM1n7BNUtQHlfgktGbd6/nJbi6KB9LkDNdoKRkUn3v4zJBUfs
Ii9AbApSFoHi9r/iQSI0QtYvQMKqlbXVZdS/8mdUAc0+MEDvBA2aOUTwP6ZR
FDB+mTBA2kI00bAc+T96IyEXh/IwQOFHILnoxe0/JADj7pBFMUBaTaVzK9Xa
v4F/IQ6gnzFA2O54TgCA97+0CRUesPMxQIuWpRHZeva/mjaFdcVOMkCnDt7f
kJTNv59LQoUyqDJA6JsVtXhV8j96a7SFoPsyQN2EgI1ID/k/CC6jzRNWM0DE
JNXa843rP2z7RgaIqjNAxvs5NsjN4L8yFFD6//8zQKiv8mzQqfe/2Ivh/g==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13262#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 20.}, {-1.4789585357457131`, 
                   1.570796326794209}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}], True -> GridBox[{{
                PaneBox[
                 ButtonBox[
                  DynamicBox[
                   FEPrivate`FrontEndResource[
                   "FEBitmaps", "SquareMinusIconMedium"]], 
                  ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                  None, Evaluator -> Automatic, Method -> "Preemptive"], 
                 Alignment -> {Center, Center}, ImageSize -> 
                 Dynamic[{
                   Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAAStFeOa+/lj4AIURU+yH5Pzd0wYnD
3dQ/m5C8mY3f8D/SUFjDa77lP9iFbLSfadi/IqE47Akn8D87AVJF1Lv2v9Wb
k3tZVPU/uAItTyZn97+7wbiC/fH6P6DBkgZT59m/gEqXStgXAEDejwSoE37u
P7tJtw/c7gJAQhD5Nd0h+T/ziT6XnbgFQEsLyfIdsu8/2iBupGZSCEDGq3FS
8yLWv1rNgu1ZJAtA7WAPNiUb97+J0D+8VMYNQDnBh/QT6va/WwqypoYtEECY
lFaB1z/cvz63Ng34kxFA9fkqUPH07z94j482beISQBnlPuExHPk/f/LaffdM
FEB5gOOt8VDwPwX2WabgsBVAfsSjZdvP2b/iJK2RzfwWQMb8kXuLtva/jN7y
ms9kGEBPic08/7X2v43DDGfVtBlAjFHs6Zaz2L9bMxlR8CAbQFqKdTzz7PA/
p0NZHGqGHEDMNHYkTxb5P0t/barn0x1APNo2vm9O7z+8RXRWej0fQBPKtC+n
ut6/wpunYohHIEAoxlAqtVL3v+XkrgoD7SBAe1d0ptvV9r9vc69BiKAhQLGG
Kp8wydO/pRcaWg9IIkBa6kdx/GXwP0EBfgGh/SJA1NpWwJoa+T8cu3sZ4q8j
QC7u9KEjae0/oorjEiVWJEDjOUyaRtLbv4+fRJtyCiVAbK4nhO+W978oyg8F
wrIlQHD5B1o1Wva/AMV038BXJkBud4HQkt7Wvz4F00jKCidAzdzf/DX38D8o
W5uT1bEnQDktZqLkIfk/ePZcbetmKEAJuiZZQavuP3SniCgDEClAQExVYLkw
2r+vKE5UyrUpQPWtdXfKvfa/Ue8MD5xpKkCUK5CyQbH2v5/LNatvEStArFP2
lt6d2L9T7VfWTccrQHUMH2ZR7PA/R98Tctt5LEA1m+bYsxb5P+bmOe9qIC1A
rm5PhVFj7z/rM1n7BNUtQHlfgktGbd6/nJbi6KB9LkDNdoKRkUn3v4zJBUfs
Ii9AbApSFoHi9r/iQSI0QtYvQMKqlbXVZdS/8mdUAc0+MEDvBA2aOUTwP6ZR
FDB+mTBA2kI00bAc+T96IyEXh/IwQOFHILnoxe0/JADj7pBFMUBaTaVzK9Xa
v4F/IQ6gnzFA2O54TgCA97+0CRUesPMxQIuWpRHZeva/mjaFdcVOMkCnDt7f
kJTNv59LQoUyqDJA6JsVtXhV8j96a7SFoPsyQN2EgI1ID/k/CC6jzRNWM0DE
JNXa843rP2z7RgaIqjNAxvs5NsjN4L8yFFD6//8zQKiv8mzQqfe/2Ivh/g==

                    "]]}, 
                    Annotation[#, "Charting`Private`Tag$13262#1"]& ]}}, {}}, {
                 DisplayFunction -> Identity, Ticks -> {Automatic, Automatic},
                   AxesOrigin -> {0, 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
                  GridLines -> {None, None}, DisplayFunction -> Identity, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
                  All, DisplayFunction -> Identity, AspectRatio -> 1, 
                  Axes -> {False, False}, AxesLabel -> {None, None}, 
                  AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                  Frame -> {{True, True}, {True, True}}, 
                  FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                  Directive[
                    Opacity[0.5], 
                    Thickness[Tiny], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                  FrameTicks -> {{None, None}, {None, None}}, 
                  GridLines -> {None, None}, GridLinesStyle -> Directive[
                    GrayLevel[0.5, 0.4]], ImageSize -> 
                  Dynamic[{
                    Automatic, 3.5 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}], 
                  Method -> {
                   "DefaultBoundaryStyle" -> Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultMeshStyle" -> AbsolutePointSize[6], 
                    "ScalingFunctions" -> None, 
                    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
                  PlotRange -> {{0., 20.}, {-1.4789585357457131`, 
                   1.570796326794209}}, PlotRangeClipping -> True, 
                  PlotRangePadding -> {{
                    Scaled[0.1], 
                    Scaled[0.1]}, {
                    Scaled[0.1], 
                    Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
                GridBox[{{
                   RowBox[{
                    TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"0.`", ",", "20.`"}], "}"}], "}"}], 
                    "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"scalar\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["3", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"Hermite\"", "SummaryItem"]}]}, {
                   RowBox[{
                    TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["False", "SummaryItem"]}]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {
                  "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                 BaseStyle -> {
                  ShowStringCharacters -> False, NumberMarks -> False, 
                   PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
              GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              BaselinePosition -> {1, 1}]}, 
           Dynamic[Typeset`open$$], ImageSize -> Automatic]},
         "SummaryPanel"],
        DynamicModuleValues:>{}], "]"}],
      InterpolatingFunction[{{0., 20.}}, {
       5, 7, 2, {729}, {4}, 0, 0, 0, 0, Automatic, {}, {}, 
        False}, CompressedData["
1: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
P/h26CU=
       "], {Developer`PackedArrayForm, CompressedData["
1:eJwl1YPXEGYUwOG+r2Xbtm3btm3btq3VslutVsst27Ztu9Werfec5x+49/7O
m6hxh8rtA4IECXIlMMj/LyjBCUVYIhCZaMQkDvFJRFJSkJp0ZCQL2clFXgpQ
mGKUpAzlqURValCbejSkCc1pRVs60Jlu9KQP/RnEUEYwmnFMZArTmcUc5rGQ
JSxnFWtYxwY2sZUd7GIvBzjMMU5yhvNc4io3uM09HvKE57ziLR/4zDd+EGjA
wQhJGMITiajEIDbxSEgSkpOKtGQgM9nISR7yU4iilKA05ahIFapTi7o0oDHN
aEkb/lt4J7rSg970YyBDGM4oxjKByUxjJrOZywIWs4yVrGYt69nIFrazkz3s
5xBHOcFpznGRK1znFnd5wGOe8ZI3vOcTX/lOgHv9hRCEJhwRiUJ0YhGXBCQm
GSlJQ3oykZUc5CYfBSlCcUpRlgpUpho1qUN9GtGUFrSmHR3pQnd60ZcBDGYY
IxnDeCYxlRn8ym/MZxFLWcHv/MGf/MVmtvE3u9nHQY5wnFOc5QKXucZN7nCf
RzzlBa95x0e+8E/gz/iDEpxQhCUCkYlGTOIQn0QkJQWpSUdGspCdXOSlAIUp
RknKUJ5KVKUGtalHQ5rQnFa0pQOd6UZP+tCfQQxlBKMZx0SmMJ1ZzGEeC1nC
claxhnVsYBNb2cEu9nKAwxzjJGc4zyWucoPb3OMhT3jOK97ygc984weBv+if
kIQhPJGISgxiE4+EJCE5qUhLBjKTjZzkIT+FKEoJSlOOilShOrWoSwMa04yW
tKE9nehKD3rTj4EMYTijGMsEJjONmcxmLgtYzDJWspq1rGcjW9jOTvawn0Mc
5QSnOcdFrnCdW9zlAY95xkve8J5PfOU7AcH0TwhCE46IRCE6sYhLAhKTjJSk
IT2ZyEoOcpOPghShOKUoSwUqU42a1KE+jWhKC1rTjo50oTu96MsABjOMkYxh
PJOYygx+5Tfms4ilrOB3/uBP/mIz2/ib3ezjIEc4zinOcoHLXOMmd7jPI57y
gte84yNf+CfYz48/KMEJRVgiEJloxCQO8UlEUlKQmnRkJAvZyUVeClCYYpSk
DOWpRFVqUJt6NKQJzWlFWzrQmW70pA/9GcRQRjCacUxkCtOZxRzmsZAlLGcV
a1jHBjaxlR3sYi8HOMwxTnKG81ziKje4zT0e8oTnvOItH/jMN34QGEL/hCQM
4YlEVGIQm3gkJAnJSUVaMpCZbOQkD/kpRFFKUJpyVKQK1alFXRrQmGa0pA3t
6URXetCbfgxkCMMZxVgmMJlpzGQ2c1nAYpaxktWsZT0b2cJ2drKH/RziKCc4
zTkucoXr3OIuD3jMM17yhvd84ivfCQipf0IQmnBEJArRiUVcEpCYZKQkDenJ
RFZykJt8FKQIxSlFWSpQmWrUpA71aURTWtCadnSkC93pRV8GMJhhjGQM/wLY
H26b
        "], CompressedData["
1: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
9fHm0Kn3v3m70uSAc/W/DnVSlXSEI0Cjtr4Q
        "]}, {Automatic}],
      Editable->False,
      SelectWithContents->True,
      Selectable->False], "[", "t", "]"}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.7948461826233687`*^9, 3.8115211650975003`*^9},
 CellLabel->
  "Out[123]=",ExpressionUUID->"5193a6bf-515d-4f53-bc49-24fc1c3ba9cf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Theta]", "[", "t", "]"}], "/.", "sol"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.731611558346425*^9, 3.7316115911798153`*^9}, {
  3.731618945241044*^9, 3.731619002864955*^9}},
 CellLabel->
  "In[435]:=",ExpressionUUID->"4c9236f2-c26b-4732-8987-46e2b2261616"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.21099, 0.531208, 0.953188], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwUmnk4VV8Xx82ZM8/DdbkuEpFoUHulJJKolKSSytAgjT+hWTJEhkQDUSpK
KqRINlKGInOIRObZHc815D3vX/dZzzl77bW/a599Pt/zXB2vk9uPCPDx8dmL
8PH9/zflkpeI2eEH66bUNu6c1eGhiiaK427KBeTbwJhZRcYLX0uuUygRSFYR
/2Nr8ZB0fMEb8bZ4dMi+cb+pOg+llEZrC1Puodx6J/UBRR4ynjwcs+DzCJ2U
jbRQW8xDXdKp/+Z+PkbGUZSX30R4SO+ZmOXM7FNkabnxyswcgY6vPXeCq52F
jpZmv3s2TaC85j8ZrA3ZKLZrj1N9H4Fmjjl2Tvu8Rou7zjr910qgNP7OCK7t
W9R8v+7jg68E2lgbR+P8zEWD9Sapa98RaCjZrozll4+Ceb0LHo8JdOvwvAdz
9h26tEh3ghdNoKZZ3ztT2oVoQa6+INuTQOcrtZZNvi1CPdUjJeV2BFJLaP42
vqEYOUSbv9m1lEBeRiA46oORs+CrfoLJRQKzQT9YIaUoZdwsbFELFzX/cdVk
2Zah7VnyNXfyuSgwW6KQ8bMc8X7LbTc+yUUO8QMijLTPSO3NhtVWDlykEVi2
c9qvAiWuCF1crstFpRv+m5qc/YI2NGRt2dPIQYt+9dLHtatRWsnjshRNDmor
/XRubKgaxdsWBr0fY6MXz5I/j76tQXt/FzrvKmIjp9NOB0Y2fEe9m0pc6C5s
dFes6O6gzw/UV2HXZHWChfL/czh9RqUeJc6+k3+wjIUejlipMkPqkes9zBfD
YCL/ejkfhm0DUl7219HoNBPJPawSmP7ZiAx3HzcM9GSgWemCrADrJiTncOxc
ggoD9V194jyV1oR2H7Iac/4xjQp8LqVO+jUjv2yLsJKV08h9ucXqidkWFG1d
XBTGnUTpNY9OjWq3I/HiZAHZWyOIlfzOqPtWO1LZYXMmuWIYbfL59reR147s
cHNW7MwQGhPkuhY1daB246xRuQODaOVap9URNzuR/9v1660l+1D96zkB+mQ3
Omi4taBrcQe6XGPsYHbgLzrqcP3povxXOPPte/2XiX/RqujMKy2eBbgx2UaQ
9v0vuhMYGWLc/wnr+bgVq6zqQ+VzbyWiT33FNYKhJnzy/UhfR//khueNWGnt
L7kfXwdQp5fFcnrUHwx63pOb5wfQvUGeF+VYD/aTmP5WvnwQLYm1mrWx78XF
7SI3CtIG0R9rhtPbhb/Y67w5NyVoCPm/6X0usWMQ57yO+HXcZATd0FHM8Qod
xyNyI7ccDo6gtUzRtTTzCUw/77DO4M4Iqi9WWe/dNYHTrCXS//JG0G3/sD9a
SlM4vvqWt/uXUTRvdMvawHUa1xmPK68kRpFg++zH8PRpLBG7tVpxyRgK3Xax
/ubYNA7dJW3cEDuG5ihHhV0vMfD5v7en7TzGkfqZKofOWCbO3TT1mHZ7HIU0
3/3xp4GJJ7OcdwqWjyMm7fE3f1kW9g2QfV9Cn0BX8nTOad9iYff5+JAVzAnk
uySjLOMkG9/1ZC6V159E4heFzL9ksHHT5x3dU26TKF7uv1avNjZ2jFSwyS6Z
RHLvNB/JruHgRxLfrsvaTiGHiyZGtAkOXrc22OPK/imUWeJ6TUmZizv9l6yY
/G8KuV2Y77u0jotVGqMGvr+YQppZRURuOBcXCFrjNRVTaMQupefiSy7euWIs
6UXXFFJq7rEp+c7FccmO9uEy00j+eqFbqjiBl9XM6XANp9Fwq8q9tXQC181m
zxzZMI0QGvJxsSHw8aX7mpo9ppGytHtq+14Cix+Qyt5wfhqN9fWrt54hcGbs
p9Dc29OIFnL+y6ZIAm8qP7FPJ2saRS1vDl3yiMB9TE3L2PJptOGJ9ubQXAJf
p9VJL/yaRuv3mfG7VBCYuvvS4An2NIp2ms2IayZwabhJaac0A4WWzhtt+kvg
/UW/k7cYMFDb48lb/lMEnhuNOVW0noFaqG5fxecIfF8TORjuZaAbM/RmNREe
Xrltkpp8loG+muzKT5Xm4dYrj2ZFYhjIuTLlyF1FHj6Xu6353HMGoro4DfKr
87BC30J2XykD1W1VWdWjxcO5im9u7OhgoHpWt7uFDg8723nuL2cyUHBosiN5
3uOJQBkrMykm4nLXSluS8a0XpYvT9JkoJL/+UR853qgzYEgamMgx3YN/EZm/
Skqn7OIeJjK+Irg8hZzfBzXcGyPPjTlf5RXPyfr4HnOKfkUx0SqHzLgdZP3J
QhqdNRlMVHcuSO86ub5lPuvnCz8x0Y7zpyZXTBO4qtpbK6uVibbn+rKP9RHY
0/gWSp5koravl1fTWglMxLz1vCnKQnun/SsOfiVw7HTr1fM6LLRzy8h9nXcE
Ntg59/jIahbSOSRWdfgxqXeBTsXOHSx02vyd25IYArup2vVvOM5CIb90950L
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
gD9Oagn//eNAyITMwZoMAf4fq6J4IA==
       "]]},
     Annotation[#, "Charting`Private`Tag$24113#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Georgia"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Georgia"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 20}, {-1.5707962982199024`, 1.5707963267938645`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.7948462242635174`*^9},
 CellLabel->"Out[435]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzVfV2Iplt2Vk1X1VdVXb/9f7r7dFfXf1XXT3dPZk4ixhgJGLyQ3KkXGhhD
2syFxMQJXuhFZhASDUQI6MWREb3wD5mLOGEQUQgEg0h0QPEiiH+gE5EIQSY5
czKZKdf61vvu9axnrf12n8xo8DDT1Pe3372e9axnrb3fvd/9Rz/1mR/54T/7
qc98+oc+9ez7f/xTf+5HPv1Df/7ZH/7RH5e3Fj+2sHDj3YWFj33vOwvy9/XC
gv1//O+p/H9hYV//XXz9+rW9Of/4a/+XPlkaPvjg//mVf28sfKD/Lv/alz77
evzvs1/6tYUZtfBo/vrf/fff+fv/6rd//avfXPjO+ev//cE3//V//R15d+G7
xs+/+G+/Lu8On8s3//Yvf/ir/+Mbw+e//B/18w+/fj18/pXf+Ka0959/ffz8
n/77r/Pn8nv5d+EPzft6X/9d0b5KH61n1vHPf3lhmXr8cG6XtPjeT31V/vcD
f+O3tN+fnL8rf8lr+0A6sPDe/F25VPuu2mDflat/31/7TftAOjd896f/yfDd
P/m3fkv7a98VS9t3f/FXh+8u/eg//MDe0j/m3xPQvvtn9B35tvy98L1u3eLc
oM9/Wf684a/V3IUlsvCdEWNra+GG/rP4E1/42vD5d+g/s9ZT+Z98Ubr4ifnv
5I/wu5/9Zx+G30k7+Du5zCdGH9qbw+/e/6X4OwGk/e6P/NxvCjj2O8Ej/E5w
H3738fnn8kX5un8u7Qyff88cnfX5t0aHv164of/MXg9M+PLnX7822IwH9oa8
rlFbkl6bXQKPXU9YOHzj1ZxlYrD19y/+/NcMKEFoYW7Lirxlv7Y/fv9f/epX
fuMbZv+StGO/+9wvfMgIzS1dMWTFWCOGgTT8uqHb+vWFfxNwGvCVf9sf8z4t
NXzbdaWt4Zd/YI7g5oDgAI3xa2lAdA7jW2G3YqEjVjTqiYXW/1XprfVCwsaY
JxQX8+Z9X5U/LD7kI/nCez+lf/+ln/9g/tuV5hMJPsNIrmTtLjdvSJCq3piF
Et3BZ2J6u+Kf/jsK7qf/7gdDC8L3FsQam9aCtBVaMJf8sfeVe2anuHjhDyb8
VCNvDvg59xivubauyjWaJMgb7RLWL+mhvJTeyivVAuuX/DW08XLeRuOFffB9
P6vIyb/WhjRm8iKvBJMFZrS1IYY33zTzBDJrozlGXokXhzYEd2xjsflo4YaS
dtH8/9d/8beNnWvyZqOEvNG+rl+2ODZVE9J9/rP638Li8I/id91Uz1GeVXG/
2BJA4ugc85lpuV1Y/hPT2Z4XVX8bQZXRpksS9capIV4+84UPLOTlu3POzISu
jVnyhrxkhTPsjJ3iq8FGa1k5bpHdGGqBK16ydqxZb8cYo8y2dixWRAiGdpoS
SINGKubUd5d8Xpm/lleG7cJqhexwtXb1pXkcD9bP8ViS69g7Qnzroclk6+Gi
SZe0NLTRIkR+am0gV60Ni2f9jbVh9FVNtjZapherrQ3B394RT92A34gfLNqX
mveFLjfib8SLr4Dx7n+kyPdM4Ch8BRyXBcZ78/edX4vz15b0JO4W8HoaYYup
Ry/HHrw3li43oh3yzivill1FInSw4lX0msBGfpTgf0W8WgT+apvWRuOrMiy9
84o8bW2Y+Mm/g7USj2KX/jlXU8vyyy3aXxOic5XNzLwfry7xswgWCHMW0CLl
7mLi3cv4jjS2SLxDizQrWBst2kRuX8Z3xLJF+E3j3eBz5a610bJm8zFyd5F4
Y2145l0knr4Cj6vaGLJbFN2Drlrycl19PerwYolxizJxnH3DlNava/102zDG
0DbT5kVgq6Ayb2OuVstNPU0Kh3xkKVR/dAVWKieXSGnsWq1ukI4vRpaIq1GX
9TdLoK/q8Zc1r7LPh98orw1tHoHdpyhcikop7bxI/bXeWG5XfcDeKqeXokeE
Oy9SFC4B3zRLc2+XEtteJAuXgG86WnoJnNZ+LZEPX0YFH6Mg2PYS+qUcnkLN
NcN6i/nWetuqIzF9iVDC3moELiUWvEg4LsF1Gw8GZiuKS/Gqo/cWW9UxjEZN
O/SqL5JyL6XIf0HKvUxXJYaIi6ZQc58v0+u6ry0qB2vd30ux79LlFxR7y9Bz
VZwOl91z0vcXoMgae8sUvx0uZ89BvCLq+pq4LD+tEbuXeLVMLduVbETTehui
ZK5HPvoTcixD/KoeosXK5uXIAAHY2sAchBwQjw1teOwtkwYTl8UFPe8xP8h7
wIf1CcxaX+WPuh3zhubL5cTfq4iifLRMGFkbXustJ4SuEoolCxZbEmLfyVUt
l3gGnZHnriI/5GId3w0MUeunUENtxOiT/w299aifUe+vKHpnEIuqvlfJ38ux
90KOK1KaGbH7KnlqObJbovEK4lV1dkaeIy6P/PCcN/oOPOWY6RzlXbJslrT+
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
KlgFciw3DfxTc2/JWzfIFt6X8C7F8sMich8V783bnbmjijXOvjPlLb2Ed5l6
7Pff7IyxHLzkiFubqOXWJu7TRS+pZ9+ghQ1o0sLMBWC9VRA+Imw++uPRR24J
7V6RfvIcm7Xp6y/mn88gc/yKucO9NCxbHAz5KDroiFbceBh1qzHfR/TNT8M6
1TXCoxOhCUEfUd4eBDSevoH1xJ/4mbmi/MIXh7WyNMs6cgEq0YeFrTrs8muI
r6RLN8iavAvsMdn/sIrRO2Dvf4MBVCgoJk4S+Qi+8jrvYUc/nFc7oLHVmtcl
ssV8h/d7zHpfH/gQolZrrnukR3OvpZF6zvJ1BLgmt4z8/T8WPNW3hfbIiVA8
JoWxa/jMu0UZ1vLmI265nn2YTfjNc3rJFqjoH8LrVnvBHc5ujCbsvL4x7HAc
SjEp79TY+GuqiMasGvLsY4hjzbMcczmLVqNRnwdCrJqyJjtjtcPY8L0ka8Pr
acROa5psZx9xV6yH0KpGAVna0MKK8jGhY214lUL3B8d19yXDaqsJeWAEqbok
5kcx0uWyNVOZIc5c6y+O4ewb/kwLnpdn3naqrDBiegwx66gRT3ktecJsPbWL
XG16w9aGvj0qmYKjucekYaTPcvlHqdUadZ+Vfwj663zFHUJ9vnqr9tpnh1HV
34QacrhGn1HDGu1RVA15p1QJjouQgR9F9hJqqrJ4F0I9wUrBLHkEKuGosxIR
U6G6mMIL19BwtqxtRU71GEI6AfUWMVWgfhQ5IomgxtzttzZwBv4RWOyIRZ7W
KuRjD9Tetu6+gxr2v0afUcNx56PIGdG3mqkUESGbPSJ9e1RgxnPEee7vEfX9
EcXzo9j3pkTMVaqwOqhhlJSZDWKkGvXx7NKjUid89oD4KpdHezUyHhHulGdG
e8OcOP7GMXPkO8ob/P0ItLetvO+ghopcZjXgCSqF1hOPiOPs725cBAzsV56f
a9RwXUlHKeA+8iPQCW8DtbiT0yALTqAGcwyPEorOLR+d8FxGHRm+PsVaxRng
fqtsNSGZq5LULj61okY/aXDIYhzXhpx+71qBk/9rhfuxCTx95QTv9MxPlOW9
ibT6XD6Yc2zWvtGC5w79cols3abPV2NkiW/X6Bu0q0P+4CfA2Hi+1fEGyRAF
8lcrCO/R72yE52p0iz63u6ZYB6zTN2z05Xq1Qp/jkz3Va4xr27Mub/malva5
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
j/0fWZG93w==\
\>"],ExpressionUUID->"5cfb1ec8-4618-4099-b8d1-eac66d663904"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"T", "[", "theta0_", "]"}], " ", ":=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"4", "*", 
     SqrtBox[
      FractionBox["L", 
       RowBox[{"2", "g"}]]], 
     FractionBox["1", 
      SqrtBox[
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], "-", 
        RowBox[{"Cos", "[", "theta0", "]"}]}]]]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Theta]", ",", "0", ",", "theta0"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7316190163081474`*^9, 3.731619082963555*^9}, {
   3.731619117281727*^9, 3.731619146786253*^9}, 3.7316192198133683`*^9, {
   3.7316192957311935`*^9, 3.7316193121245165`*^9}, {3.73161937993866*^9, 
   3.7316193926859426`*^9}, {3.731619423506023*^9, 3.7316194320046787`*^9}, {
   3.731619462969001*^9, 3.7316195003409386`*^9}, {3.7316195352567716`*^9, 
   3.7316195817495327`*^9}, {3.7316818083535423`*^9, 3.7316818091615133`*^9}},
 CellLabel->
  "In[436]:=",ExpressionUUID->"b11d2689-9aca-455b-9a95-568f34d6e5bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"T", "[", "1.57", "]"}]], "Input",
 CellChangeTimes->{{3.7316191494308033`*^9, 3.731619168470929*^9}, {
  3.7316192014736333`*^9, 3.731619213683215*^9}, {3.731619395646098*^9, 
  3.7316193959482465`*^9}},
 CellLabel->
  "In[437]:=",ExpressionUUID->"6a87c97a-cabd-4565-861d-9b169ce31750"],

Cell[BoxData["2.368618886899416`"], "Output",
 CellChangeTimes->{3.79484629208536*^9},
 CellLabel->
  "Out[437]=",ExpressionUUID->"57c1b3c6-0783-40c3-8b5a-fe7b0d4521ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"T", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0.01", ",", "\[Pi]"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Initial Conditions\>\"", ",", "\"\<Period\>\""}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.7316196037957582`*^9, 3.731619706017494*^9}, {
  3.7316821019107933`*^9, 3.731682119611986*^9}},
 CellLabel->
  "In[438]:=",ExpressionUUID->"99400302-97ba-42fc-b847-f0fc7177b59b"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.21099, 0.531208, 0.953188], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
w3ni+B+jCMrf
       "]]},
     Annotation[#, "Charting`Private`Tag$24896#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"Initial Conditions\"", TraditionalForm], 
    FormBox["\"Period\"", TraditionalForm]},
  AxesOrigin->{0.01, 2.0071032528050714`},
  BaseStyle->{FontFamily -> "Georgia"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontFamily -> "Georgia"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0.01, Pi}, {2.0071032528050714`, 5.175704417183266}}, {{0.01, 
    3.141592653589793}, {2.0071032528050714`, 5.175704417183266}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.794846341225851*^9},
 CellLabel->
  "Out[438]=",ExpressionUUID->"70b66bb6-e31c-443b-83bb-cb2fa9df5905"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{950.4, 468.9},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "PresenterSettings" -> {
   "ShowToolbar" -> True, "SlideBreakStyles" -> {}, "ShowSlideBreaks" -> 
    True}},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (March 18, 2020)",
StyleDefinitions->FrontEnd`FileName[{"SlideShow"}, "Sapphire.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"565737d8-0ba7-49ea-9f5a-68a8c61a08d7"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 386, 7, 423, "Title",ExpressionUUID->"71b32cd2-9cb9-4887-aab1-f1760c8b78be"],
Cell[CellGroupData[{
Cell[991, 33, 395, 6, 106, "Section",ExpressionUUID->"ea5ab51c-6a30-47c0-8f3b-04da8645f7af"],
Cell[1389, 41, 1009, 24, 360, "Text",ExpressionUUID->"b2920327-8ca4-4ce8-bb43-a9985d9b0d80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2435, 70, 570, 9, 221, "Section",ExpressionUUID->"f25d4cf3-ad2d-435b-a0e1-e83d6253dc30"],
Cell[3008, 81, 707, 15, 87, "Text",ExpressionUUID->"29a35520-3724-4ad0-8194-5ae6a1bbb4ef"],
Cell[CellGroupData[{
Cell[3740, 100, 602, 10, 87, "Item",ExpressionUUID->"a6c0f6b6-4a3c-4d12-9ff0-8b65ef76133e"],
Cell[4345, 112, 773, 16, 58, "Item",ExpressionUUID->"27929854-291b-4b8f-9483-d4a835361ae6"],
Cell[5121, 130, 879, 19, 58, "Item",ExpressionUUID->"1b7616a9-5da0-4a11-9ed3-1892fea2717a"],
Cell[6003, 151, 412, 11, 87, "Item",ExpressionUUID->"7587d834-55b1-432f-bb39-fa66a9d2d474"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6452, 167, 202, 4, 45, "Input",ExpressionUUID->"4f8047a6-8e14-41f2-86b0-a306af163e29"],
Cell[6657, 173, 181, 3, 54, "Output",ExpressionUUID->"807a9fed-5510-49dc-bb6d-ad0138f64407"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6887, 182, 452, 8, 107, "Section",ExpressionUUID->"10c97c96-b96e-4449-9165-886ec474b142",
 InitializationCell->True],
Cell[7342, 192, 587, 13, 148, "Text",ExpressionUUID->"f7a0e2d0-1878-4ede-add2-9fd960ca23a2"],
Cell[CellGroupData[{
Cell[7954, 209, 1282, 29, 172, "Code",ExpressionUUID->"422f7187-cf79-4d59-a55e-44bc92836611",
 InitializationCell->True],
Cell[9239, 240, 261, 5, 45, "Output",ExpressionUUID->"c99c7a97-ea05-4c33-bcc6-899045218222"],
Cell[9503, 247, 263, 5, 45, "Output",ExpressionUUID->"956ac2c8-6bf2-4546-8c55-d173762809fd"],
Cell[9769, 254, 263, 5, 45, "Output",ExpressionUUID->"97a5d688-8537-4468-b4ed-052eb6dc1d14"],
Cell[10035, 261, 492, 8, 104, "Output",ExpressionUUID->"b79d42ca-9bcd-4274-86b0-db4b9df0a355"],
Cell[10530, 271, 268, 5, 45, "Output",ExpressionUUID->"8837eec1-9d6a-4dbe-aed6-d58671befc58"]
}, Open  ]],
Cell[10813, 279, 296, 7, 118, "Text",ExpressionUUID->"762124b7-1d88-4a3f-b7f3-541b69d05957",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[11134, 290, 752, 17, 142, "Code",ExpressionUUID->"9771ba08-8327-4e69-8289-07f2856ce5ae"],
Cell[11889, 309, 196, 3, 45, "Output",ExpressionUUID->"08774b26-be54-4279-a0d5-f4391e06b62e"],
Cell[12088, 314, 263, 5, 45, "Output",ExpressionUUID->"83c1b43c-a9bf-4625-a788-88cea1b160b7"],
Cell[12354, 321, 267, 5, 45, "Output",ExpressionUUID->"464e723f-1696-4e64-8869-d6ff514306b6"],
Cell[12624, 328, 230, 4, 45, "Output",ExpressionUUID->"a553ecff-4f02-4cdd-adab-b563dd0070fa"]
}, Open  ]],
Cell[12869, 335, 277, 6, 87, "Text",ExpressionUUID->"9806f6c7-9eb3-401b-8866-986898a1de5e"],
Cell[CellGroupData[{
Cell[13171, 345, 423, 8, 113, "Code",ExpressionUUID->"c5eeece9-99dc-46c5-8606-13abe698d7c4"],
Cell[13597, 355, 346, 10, 50, "Output",ExpressionUUID->"d922c6b2-98c7-46d0-b901-30de890b8b80"],
Cell[13946, 367, 356, 7, 75, "Output",ExpressionUUID->"16081239-5a5c-41e7-aeae-1d21b5247b51"],
Cell[14305, 376, 374, 7, 75, "Output",ExpressionUUID->"a316f497-8643-4ad4-9205-4bebf3a7b8c0"]
}, Open  ]],
Cell[14694, 386, 299, 7, 87, "Text",ExpressionUUID->"d80b25c9-ecbb-4a03-86da-2e61adb2c513"],
Cell[CellGroupData[{
Cell[15018, 397, 416, 9, 54, "Code",ExpressionUUID->"47170f6d-ac18-44cb-956d-c84adcf31802"],
Cell[15437, 408, 312, 6, 45, "Output",ExpressionUUID->"4b10486f-bfcd-4c2a-afaa-d887aa4f8c32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15786, 419, 696, 14, 201, "Code",ExpressionUUID->"31c70515-ccc1-4c25-a567-5610bda144a3"],
Cell[16485, 435, 312, 6, 45, "Output",ExpressionUUID->"17c8cd11-0ed5-45c3-a8d9-aa10260c43a5"],
Cell[16800, 443, 292, 6, 45, "Output",ExpressionUUID->"961fd1d8-0fd6-4daa-a3b1-7f94433b237d"],
Cell[17095, 451, 312, 6, 45, "Output",ExpressionUUID->"cebfab6e-7bd5-4a04-965a-d8bccec14e31"],
Cell[17410, 459, 327, 6, 45, "Output",ExpressionUUID->"dc7b8c10-513c-4a6e-95a4-7aca77e503a5"],
Cell[17740, 467, 325, 6, 45, "Output",ExpressionUUID->"3a419a0a-2f7a-420a-b99d-7e07b29876fd"],
Cell[18068, 475, 303, 6, 45, "Output",ExpressionUUID->"5c052327-e93a-4b62-a441-a1405512a29a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18420, 487, 261, 5, 107, "Section",ExpressionUUID->"483476a4-e351-4e5e-a6e8-e60b48d4ec87"],
Cell[18684, 494, 558, 14, 178, "Text",ExpressionUUID->"ef99f424-5caa-4b70-8fd4-562dbbe67175"],
Cell[CellGroupData[{
Cell[19267, 512, 1080, 18, 54, "Code",ExpressionUUID->"89d2cde4-4ed3-4f38-9712-d61b7d770fb4"],
Cell[20350, 532, 500, 12, 38, "Message",ExpressionUUID->"d568d2ee-31b9-49a2-8b5c-8276fbdd4084"]
}, Open  ]],
Cell[20865, 547, 308, 8, 118, "Text",ExpressionUUID->"7beda78e-900b-4e9e-9960-46202509a992"],
Cell[CellGroupData[{
Cell[21198, 559, 1952, 40, 201, "Code",ExpressionUUID->"916e6833-121c-4e42-b3ea-58564b5bcf73"],
Cell[23153, 601, 455, 11, 37, "Message",ExpressionUUID->"4c66be02-171c-4754-b9f9-a3e69c17c734"],
Cell[23611, 614, 288, 4, 45, "Output",ExpressionUUID->"1efa8750-c99b-4c1c-baf7-4d32d59fb058"],
Cell[23902, 620, 490, 11, 38, "Message",ExpressionUUID->"79f0c151-3b73-45f4-918c-de09defc930f"],
Cell[24395, 633, 274, 4, 45, "Output",ExpressionUUID->"63732e95-07f4-4c13-a6fd-06caaa3a00d6"],
Cell[24672, 639, 409, 10, 37, "Message",ExpressionUUID->"546627db-efa7-4e2d-8480-77b82fc379cc"],
Cell[25084, 651, 409, 10, 37, "Message",ExpressionUUID->"748b74fb-6d21-4e73-a0e0-306ecbb52402"],
Cell[25496, 663, 492, 11, 38, "Message",ExpressionUUID->"c81f6bf2-357e-4489-b542-bf9606396a30"],
Cell[25991, 676, 490, 11, 38, "Message",ExpressionUUID->"53037d0e-791e-4e2d-bdde-ccf74e48a9b3"],
Cell[26484, 689, 405, 10, 37, "Message",ExpressionUUID->"4d8fd314-71cb-4b0e-a7ed-e86e8ed66b39"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[26938, 705, 191, 4, 164, "Section",ExpressionUUID->"d2454e12-3980-48f2-9c18-d7fd668f403e",
 InitializationCell->True],
Cell[27132, 711, 255, 4, 87, "Text",ExpressionUUID->"95ac84ce-0152-418b-abf5-204356a53b19"],
Cell[CellGroupData[{
Cell[27412, 719, 994, 31, 209, "Code",ExpressionUUID->"d2bc7c46-eae1-4d2d-a1df-3a0dbbb17b03"],
Cell[28409, 752, 172, 2, 45, "Output",ExpressionUUID->"182f05a3-0ba0-43da-b131-ce0380fc7c0b"],
Cell[28584, 756, 172, 2, 45, "Output",ExpressionUUID->"a41112d5-0d95-4988-ae79-8242b3a46929"],
Cell[28759, 760, 174, 2, 45, "Output",ExpressionUUID->"d07692a7-e94b-45ac-a912-9614fde8920e"]
}, Open  ]],
Cell[28948, 765, 228, 4, 57, "Text",ExpressionUUID->"19517f4f-e3ee-4829-baa7-66fe1b06e1ac"],
Cell[29179, 771, 380, 10, 37, "CodeText",ExpressionUUID->"6b8ea98e-3eca-47ea-bef1-5952294c66a3"],
Cell[29562, 783, 637, 15, 213, "Text",ExpressionUUID->"13a00737-a2c7-413d-aecc-0ad368b85c1a"],
Cell[30202, 800, 825, 24, 188, "Code",ExpressionUUID->"9274211f-a52d-470e-9606-6ffb2acba465",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[31052, 828, 480, 10, 114, "Code",ExpressionUUID->"e87e61cc-2e11-4d55-842b-4d28c42ca8c5"],
Cell[31535, 840, 196, 3, 45, "Output",ExpressionUUID->"2b35b345-b871-4a14-ad6e-489c3cdd20ec"],
Cell[31734, 845, 302, 8, 67, "Output",ExpressionUUID->"1f22cd88-f036-406b-ae56-a120ab9afeaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32073, 858, 1466, 44, 197, "Code",ExpressionUUID->"1a379e00-2181-42b9-8158-8d3208dd1b70"],
Cell[33542, 904, 295, 5, 45, "Output",ExpressionUUID->"b2b9f2dd-7ef8-45dc-8ded-0660989196a7"],
Cell[33840, 911, 278, 5, 45, "Output",ExpressionUUID->"4725d9a5-8fcd-425f-8973-2f004cbbf03f"],
Cell[34121, 918, 296, 6, 45, "Output",ExpressionUUID->"c409f73b-28e9-4563-ac7d-8f7ea564636f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[34466, 930, 184, 3, 162, "Section",ExpressionUUID->"77ee462c-bd54-4368-b864-b08e60d1869a"],
Cell[34653, 935, 761, 14, 182, "Text",ExpressionUUID->"ed73612d-f64e-40b4-a120-d22ba8ffe7a8"],
Cell[CellGroupData[{
Cell[35439, 953, 176, 3, 72, "Subsubsection",ExpressionUUID->"9ee1bf1d-efa2-49f6-a4b0-912a8e3d3da0"],
Cell[35618, 958, 491, 13, 60, "Code",ExpressionUUID->"26dc218e-942b-4629-afcb-7dc4cbb176c2"],
Cell[CellGroupData[{
Cell[36134, 975, 457, 13, 85, "Code",ExpressionUUID->"04aad786-9f2b-4f88-b832-1ac9eef323e2"],
Cell[36594, 990, 575, 15, 45, "Output",ExpressionUUID->"e3dfc9c1-d005-4764-bf5b-3f837f884879"],
Cell[37172, 1007, 194, 3, 45, "Output",ExpressionUUID->"e43ed683-566c-402c-a6f7-979ab21209d4"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37415, 1016, 197, 3, 72, "Subsubsection",ExpressionUUID->"193ef597-0a23-4ea0-a2f4-357d60a82765"],
Cell[37615, 1021, 41651, 690, 326, "Text",ExpressionUUID->"3bfc7253-6931-49f7-869c-f420f42b2f1a"],
Cell[79269, 1713, 298, 6, 89, "Text",ExpressionUUID->"3d636b8f-a02b-4414-9f82-770760faaa64"],
Cell[79570, 1721, 1030, 34, 129, "DisplayFormula",ExpressionUUID->"1e331a4f-e951-43a5-afe9-97a126de7398"],
Cell[80603, 1757, 171, 3, 58, "Text",ExpressionUUID->"24d97914-b0d9-419c-b4f1-16cc515423e7"],
Cell[CellGroupData[{
Cell[80799, 1764, 1594, 48, 54, "Code",ExpressionUUID->"c7cd0896-916a-4109-acf7-d4480b74e868"],
Cell[82396, 1814, 2517, 80, 133, "Output",ExpressionUUID->"c4289d27-0932-47ff-ae2a-ece317f0c3cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84950, 1899, 301, 6, 54, "Code",ExpressionUUID->"471995c4-7a71-4ce9-b27a-5d686a6c7b18"],
Cell[85254, 1907, 2417, 79, 133, "Output",ExpressionUUID->"8599ee25-74cf-460f-b494-638eb8708e51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87708, 1991, 409, 8, 54, "Code",ExpressionUUID->"8a600782-1a13-4e20-b190-7c5af4b5c75c"],
Cell[88120, 2001, 824, 27, 69, "Output",ExpressionUUID->"5c97c532-c282-47d4-b58a-8214a2cccb08"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88981, 2033, 746, 19, 84, "Code",ExpressionUUID->"3828b5ab-4dba-4191-8936-5afd2e351902"],
Cell[89730, 2054, 2096, 72, 183, "Output",ExpressionUUID->"50684687-f29c-4daf-897a-a061a3e35760"],
Cell[91829, 2128, 175, 3, 45, "Output",ExpressionUUID->"df0512c1-a3d6-4469-94b4-bb91b3df7d6c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[92053, 2137, 230, 4, 107, "Subsubsection",ExpressionUUID->"051a8616-2991-4dc5-b1e5-793908dbc2e3"],
Cell[92286, 2143, 603, 16, 239, "Text",ExpressionUUID->"5962accc-7ea4-411d-ad57-45ed7098ce1f"],
Cell[CellGroupData[{
Cell[92914, 2163, 1419, 39, 186, "Code",ExpressionUUID->"03beff4a-286e-4a66-87ba-4832a08312f7"],
Cell[94336, 2204, 318, 5, 45, "Output",ExpressionUUID->"818c8963-80e7-4ef4-abbb-b860589ab051"],
Cell[94657, 2211, 563, 18, 72, "Output",ExpressionUUID->"deddb6e0-7924-47eb-8c44-ca67fb3b32ee"],
Cell[95223, 2231, 340, 9, 68, "Output",ExpressionUUID->"88d9b7c1-b02f-4679-8f7b-e92515199aa2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95600, 2245, 1033, 26, 58, "Code",ExpressionUUID->"e90ac3ec-1162-422f-929c-6912cd953dce"],
Cell[96636, 2273, 197, 3, 45, "Output",ExpressionUUID->"3907c432-cb1f-4f9d-a4f8-f9c36876c483"]
}, Open  ]],
Cell[96848, 2279, 289, 7, 87, "Text",ExpressionUUID->"d30dff4d-5545-4541-b605-6bfad6b3cd51"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97174, 2291, 187, 3, 107, "Subsubsection",ExpressionUUID->"c4e29796-8c0e-4b68-b8fb-11dded6e3185"],
Cell[CellGroupData[{
Cell[97386, 2298, 899, 25, 106, "Code",ExpressionUUID->"06092796-0f18-483f-9106-1d71312c9f65"],
Cell[98288, 2325, 439, 13, 74, "Output",ExpressionUUID->"2c847f76-d184-40a1-8aa3-3e57efdfe582"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98764, 2343, 312, 7, 54, "Code",ExpressionUUID->"dee73eea-c5df-44c5-89d6-92023d610fcb"],
Cell[99079, 2352, 341, 10, 74, "Output",ExpressionUUID->"3ce8665b-8b02-43a7-9aa0-2fbde200db8b"]
}, Open  ]],
Cell[99435, 2365, 263, 5, 98, "Text",ExpressionUUID->"f3c18655-20bb-4318-b25f-ffb47d7e3306"],
Cell[CellGroupData[{
Cell[99723, 2374, 1202, 32, 135, "Code",ExpressionUUID->"0cd8687e-4080-436d-8e61-80d63ab9d010"],
Cell[100928, 2408, 46091, 804, 154, "Output",ExpressionUUID->"5193a6bf-515d-4f53-bc49-24fc1c3ba9cf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[147056, 3217, 404, 10, 45, "Input",ExpressionUUID->"4c9236f2-c26b-4732-8987-46e2b2261616"],
Cell[147463, 3229, 58470, 979, 235, 35219, 597, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"5cfb1ec8-4618-4099-b8d1-eac66d663904"]
}, Open  ]],
Cell[205948, 4211, 1007, 23, 214, "Input",ExpressionUUID->"b11d2689-9aca-455b-9a95-568f34d6e5bd"],
Cell[CellGroupData[{
Cell[206980, 4238, 310, 6, 45, "Input",ExpressionUUID->"6a87c97a-cabd-4565-861d-9b169ce31750"],
Cell[207293, 4246, 169, 3, 45, "Output",ExpressionUUID->"57c1b3c6-0783-40c3-8b5a-fe7b0d4521ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[207499, 4254, 517, 13, 104, "Input",ExpressionUUID->"99400302-97ba-42fc-b847-f0fc7177b59b"],
Cell[208019, 4269, 5694, 115, 207, "Output",ExpressionUUID->"70b66bb6-e31c-443b-83bb-cb2fa9df5905"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

